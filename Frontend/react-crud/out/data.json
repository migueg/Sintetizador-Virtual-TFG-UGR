{
    "project": {},
    "files": {
        "src\\controller\\analyser.js": {
            "name": "src\\controller\\analyser.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src\\controller\\dbFetcher.js": {
            "name": "src\\controller\\dbFetcher.js",
            "modules": {},
            "classes": {
                "Analyser": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\controller\\delay.js": {
            "name": "src\\controller\\delay.js",
            "modules": {
                "Delay": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src\\controller\\distorsion.js": {
            "name": "src\\controller\\distorsion.js",
            "modules": {
                "Distorsion": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src\\controller\\effect.js": {
            "name": "src\\controller\\effect.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src\\controller\\equalizer.js": {
            "name": "src\\controller\\equalizer.js",
            "modules": {},
            "classes": {
                "Equalizer": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\controller\\filter.js": {
            "name": "src\\controller\\filter.js",
            "modules": {
                "Filter": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src\\controller\\loader.js": {
            "name": "src\\controller\\loader.js",
            "modules": {},
            "classes": {
                "Loader": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\controller\\midi.js": {
            "name": "src\\controller\\midi.js",
            "modules": {},
            "classes": {
                "Midi": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\controller\\oscillator.js": {
            "name": "src\\controller\\oscillator.js",
            "modules": {},
            "classes": {
                "oscillator": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\controller\\recorder.js": {
            "name": "src\\controller\\recorder.js",
            "modules": {},
            "classes": {
                "Recorder": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\controller\\reverb.js": {
            "name": "src\\controller\\reverb.js",
            "modules": {
                "Reverb": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src\\controller\\saver.js": {
            "name": "src\\controller\\saver.js",
            "modules": {},
            "classes": {
                "Saver": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\controller\\synth.js": {
            "name": "src\\controller\\synth.js",
            "modules": {
                "synth": 1
            },
            "classes": {
                "Synth": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\controller\\voice.js": {
            "name": "src\\controller\\voice.js",
            "modules": {},
            "classes": {
                "Voice": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\view\\elements\\effects\\delay.js": {
            "name": "src\\view\\elements\\effects\\delay.js",
            "modules": {},
            "classes": {
                "Delay": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\view\\elements\\effects\\distorsion.js": {
            "name": "src\\view\\elements\\effects\\distorsion.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src\\view\\elements\\effects\\effect.js": {
            "name": "src\\view\\elements\\effects\\effect.js",
            "modules": {},
            "classes": {
                "Effect": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\view\\elements\\effects\\filter.js": {
            "name": "src\\view\\elements\\effects\\filter.js",
            "modules": {},
            "classes": {
                "Filter": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\view\\elements\\effects\\filtertypes.js": {
            "name": "src\\view\\elements\\effects\\filtertypes.js",
            "modules": {
                "filterTypes": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src\\view\\elements\\effects\\reverb.js": {
            "name": "src\\view\\elements\\effects\\reverb.js",
            "modules": {},
            "classes": {
                "Reverb": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\view\\elements\\modals\\modal-delete.js": {
            "name": "src\\view\\elements\\modals\\modal-delete.js",
            "modules": {},
            "classes": {
                "ModalDelete": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\view\\elements\\modals\\modal-load.js": {
            "name": "src\\view\\elements\\modals\\modal-load.js",
            "modules": {},
            "classes": {
                "ModalLoad": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\view\\elements\\modals\\modal-password.js": {
            "name": "src\\view\\elements\\modals\\modal-password.js",
            "modules": {},
            "classes": {
                "ModalPassword": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\view\\elements\\modals\\modal-save.js": {
            "name": "src\\view\\elements\\modals\\modal-save.js",
            "modules": {},
            "classes": {
                "ModalSave": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\view\\elements\\modals\\modal.js": {
            "name": "src\\view\\elements\\modals\\modal.js",
            "modules": {},
            "classes": {
                "Modal": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\view\\elements\\envelope.js": {
            "name": "src\\view\\elements\\envelope.js",
            "modules": {},
            "classes": {
                "Envelope": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\view\\elements\\knobtypes.js": {
            "name": "src\\view\\elements\\knobtypes.js",
            "modules": {
                "types": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src\\view\\elements\\limitedKnob.js": {
            "name": "src\\view\\elements\\limitedKnob.js",
            "modules": {
                "Knob": 1
            },
            "classes": {
                "LimitedKnob": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\view\\elements\\rating.js": {
            "name": "src\\view\\elements\\rating.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src\\view\\elements\\table.js": {
            "name": "src\\view\\elements\\table.js",
            "modules": {},
            "classes": {
                "TableUI": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\view\\analyser-component.js": {
            "name": "src\\view\\analyser-component.js",
            "modules": {},
            "classes": {
                "Anlyser": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\view\\errorPage-component.js": {
            "name": "src\\view\\errorPage-component.js",
            "modules": {},
            "classes": {
                "ErrorPage": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\view\\fx-components.js": {
            "name": "src\\view\\fx-components.js",
            "modules": {
                "FX": 1
            },
            "classes": {
                "Distorsion": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\view\\head-component.js": {
            "name": "src\\view\\head-component.js",
            "modules": {},
            "classes": {
                "Header": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\view\\library-components.js": {
            "name": "src\\view\\library-components.js",
            "modules": {},
            "classes": {
                "Library": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\view\\login-component.js": {
            "name": "src\\view\\login-component.js",
            "modules": {},
            "classes": {
                "Login": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\view\\navbar.js": {
            "name": "src\\view\\navbar.js",
            "modules": {
                "Navigator": 1
            },
            "classes": {
                "Navigator": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\view\\osc-components.js": {
            "name": "src\\view\\osc-components.js",
            "modules": {
                "OscComponents": 1
            },
            "classes": {
                "Oscilador": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\view\\piano-component.js": {
            "name": "src\\view\\piano-component.js",
            "modules": {
                "Piano": 1
            },
            "classes": {
                "Piano": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\view\\profile-component.js": {
            "name": "src\\view\\profile-component.js",
            "modules": {},
            "classes": {
                "Profile": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\view\\signup-component.js": {
            "name": "src\\view\\signup-component.js",
            "modules": {},
            "classes": {
                "SignUp": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\App.js": {
            "name": "src\\App.js",
            "modules": {
                "App": 1
            },
            "classes": {
                "App": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\index.js": {
            "name": "src\\index.js",
            "modules": {},
            "classes": {
                "Index": 1
            },
            "fors": {},
            "namespaces": {}
        }
    },
    "modules": {
        "Delay": {
            "name": "Delay",
            "submodules": {},
            "elements": {},
            "classes": {
                "Analyser": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "src\\controller\\dbFetcher.js",
            "line": 3,
            "description": "Proporciona el efecto delay"
        },
        "Distorsion": {
            "name": "Distorsion",
            "submodules": {},
            "elements": {},
            "classes": {
                "Equalizer": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "src\\controller\\equalizer.js",
            "line": 2,
            "description": "Proporciona el efecto Distorsion"
        },
        "Filter": {
            "name": "Filter",
            "submodules": {},
            "elements": {},
            "classes": {
                "Loader": 1,
                "Midi": 1,
                "oscillator": 1,
                "Recorder": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "src\\controller\\recorder.js",
            "line": 2,
            "description": "Proporciona el efecto Filtro"
        },
        "Reverb": {
            "name": "Reverb",
            "submodules": {},
            "elements": {},
            "classes": {
                "Saver": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "src\\controller\\saver.js",
            "line": 4,
            "description": "Proporciona el efecto reverb"
        },
        "synth": {
            "name": "synth",
            "submodules": {},
            "elements": {},
            "classes": {
                "Delay": 1,
                "Filter": 1,
                "Synth": 1,
                "Voice": 1,
                "Effect": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "src\\view\\elements\\effects\\effect.js",
            "line": 4,
            "description": "Proporciona una clase fachada para el controlador"
        },
        "filterTypes": {
            "name": "filterTypes",
            "submodules": {},
            "elements": {},
            "classes": {
                "Reverb": 1,
                "ModalDelete": 1,
                "ModalLoad": 1,
                "ModalPassword": 1,
                "ModalSave": 1,
                "Modal": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "src\\view\\elements\\modals\\modal.js",
            "line": 10,
            "description": "Enumerado con los tipos de filtros"
        },
        "Knob": {
            "name": "Knob",
            "submodules": {},
            "elements": {},
            "classes": {
                "LimitedKnob": 1,
                "Envelope": 1,
                "TableUI": 1,
                "Anlyser": 1,
                "ErrorPage": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "src\\view\\errorPage-component.js",
            "line": 8,
            "description": "Proporciona los elementos de la interfaz para los knobs"
        },
        "types": {
            "name": "types",
            "submodules": {},
            "elements": {},
            "classes": {},
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "src\\view\\elements\\knobtypes.js",
            "line": 2,
            "description": "Enumerado con los tipos de knobs"
        },
        "FX": {
            "name": "FX",
            "submodules": {},
            "elements": {},
            "classes": {
                "Distorsion": 1,
                "Header": 1,
                "Library": 1,
                "Login": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "src\\view\\login-component.js",
            "line": 8,
            "description": "Vista de los efectos"
        },
        "Navigator": {
            "name": "Navigator",
            "submodules": {},
            "elements": {},
            "classes": {
                "Navigator": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "src\\view\\navbar.js",
            "line": 14,
            "description": "Proporciona la barra de navegación del Frontend"
        },
        "OscComponents": {
            "name": "OscComponents",
            "submodules": {},
            "elements": {},
            "classes": {
                "Oscilador": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "src\\view\\osc-components.js",
            "line": 16,
            "description": "Proporciona la interfaz correspondiente a los dos osciladores contruida"
        },
        "Piano": {
            "name": "Piano",
            "submodules": {},
            "elements": {},
            "classes": {
                "Piano": 1,
                "Profile": 1,
                "SignUp": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "src\\view\\signup-component.js",
            "line": 13,
            "description": "Proporciona la interfaz correspondiente a el piano"
        },
        "App": {
            "name": "App",
            "submodules": {},
            "elements": {},
            "classes": {
                "App": 1,
                "Index": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "src\\index.js",
            "line": 33,
            "description": "Modulo de la aplicación"
        }
    },
    "classes": {
        "Analyser": {
            "name": "Analyser",
            "shortname": "Analyser",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Delay",
            "file": "src\\controller\\dbFetcher.js",
            "line": 3,
            "description": "La clase DbFetcher contiene el comportamiento común en las peticiones\nal Backend",
            "is_constructor": 1,
            "params": [
                {
                    "name": "context",
                    "description": "AudioContext",
                    "type": "BaseContext"
                },
                {
                    "name": "master",
                    "description": "Nodo master de ganancia",
                    "type": "AudioNode"
                }
            ]
        },
        "Delay": {
            "name": "Delay",
            "shortname": "Delay",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "synth",
            "file": "src\\view\\elements\\effects\\delay.js",
            "line": 8,
            "description": "Clase que genera el componente de la interfaz para el control\ndel efecto Delay",
            "is_constructor": 1,
            "params": [
                {
                    "name": "context",
                    "description": "AudioContext",
                    "type": "BaseAudioContext"
                },
                {
                    "name": "input",
                    "description": "Nodo de entrada sobre el que se aplica el efecto",
                    "type": "AudioNode"
                },
                {
                    "name": "output",
                    "description": "Node de salida con el efecto aplicado",
                    "type": "AudioNode"
                }
            ],
            "see": [
                "Effect"
            ]
        },
        "Distorsion": {
            "name": "Distorsion",
            "shortname": "Distorsion",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "FX",
            "namespace": "",
            "file": "src\\view\\fx-components.js",
            "line": 13,
            "description": "Clase que genera un vista para aplicar y controlar los efectos",
            "is_constructor": 1,
            "params": [
                {
                    "name": "context",
                    "description": "AudioContext",
                    "type": "BaseAudioContext"
                },
                {
                    "name": "input",
                    "description": "Nodo de entrada sobre el que se aplica el efecto",
                    "type": "AudioNode"
                },
                {
                    "name": "output",
                    "description": "Node de salida con el efecto aplicado",
                    "type": "AudioNode"
                }
            ],
            "see": [
                "Effect"
            ]
        },
        "Equalizer": {
            "name": "Equalizer",
            "shortname": "Equalizer",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Distorsion",
            "namespace": "",
            "file": "src\\controller\\equalizer.js",
            "line": 2,
            "description": "La clase Equalizer se encarga de ecualizar la señal de audio",
            "is_constructor": 1,
            "params": [
                {
                    "name": "context",
                    "description": "AudioContext",
                    "type": "BaseContext"
                },
                {
                    "name": "master",
                    "description": "Nodo master de ganancia",
                    "type": "AudioNode"
                },
                {
                    "name": "eqGain",
                    "description": "Nodo de ganancia para el ecualizador",
                    "type": "AudioNode"
                }
            ]
        },
        "Filter": {
            "name": "Filter",
            "shortname": "Filter",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "synth",
            "namespace": "",
            "file": "src\\view\\elements\\effects\\filter.js",
            "line": 11,
            "description": "Clase que genera el componente de la interfaz para el control\ndel efecto Filter",
            "is_constructor": 1,
            "params": [
                {
                    "name": "context",
                    "description": "AudioContext",
                    "type": "BaseAudioContext"
                },
                {
                    "name": "input",
                    "description": "Nodo de entrada sobre el que se aplica el efecto",
                    "type": "AudioNode"
                },
                {
                    "name": "output",
                    "description": "Node de salida con el efecto aplicado",
                    "type": "AudioNode"
                },
                {
                    "name": "type",
                    "description": "Tipo de filtro",
                    "type": "String"
                }
            ],
            "see": [
                "Effect"
            ]
        },
        "Loader": {
            "name": "Loader",
            "shortname": "Loader",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Filter",
            "namespace": "",
            "file": "src\\controller\\loader.js",
            "line": 4,
            "description": "La clase Loader contiene  las peticiones de tipo GET realizadas\nal Backend",
            "is_constructor": 1
        },
        "Midi": {
            "name": "Midi",
            "shortname": "Midi",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Filter",
            "namespace": "",
            "file": "src\\controller\\midi.js",
            "line": 4,
            "description": "La clase Midi se encarga de comunicarse con el hardware de tipo MIDI",
            "is_constructor": 1,
            "params": [
                {
                    "name": "Synth",
                    "description": "instancia del sintetizador",
                    "type": "Synth"
                }
            ]
        },
        "oscillator": {
            "name": "oscillator",
            "shortname": "oscillator",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Filter",
            "namespace": "",
            "file": "src\\controller\\oscillator.js",
            "line": 4,
            "description": "Clase que representa un oscilador analógico",
            "is_constructor": 1
        },
        "Recorder": {
            "name": "Recorder",
            "shortname": "Recorder",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Filter",
            "namespace": "",
            "file": "src\\controller\\recorder.js",
            "line": 2,
            "description": "La clase Recorder se encarga de convertir las señales de audio en archivos  mp3\nlegibles por el navegador",
            "is_constructor": 1,
            "params": [
                {
                    "name": "context",
                    "description": "Contexto",
                    "type": "BaseAudioContext"
                },
                {
                    "name": "master",
                    "description": "Ganancia master",
                    "type": "AudioNode"
                }
            ]
        },
        "Saver": {
            "name": "Saver",
            "shortname": "Saver",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Reverb",
            "namespace": "",
            "file": "src\\controller\\saver.js",
            "line": 4,
            "description": "La clase Saver contiene  las peticiones de tipo POST y DELETE realizadas\nal Backend",
            "is_constructor": 1,
            "params": [
                {
                    "name": "oscA",
                    "description": "",
                    "type": "Oscillator"
                },
                {
                    "name": "oscB",
                    "description": "",
                    "type": "Oscillator"
                },
                {
                    "name": "synth",
                    "description": "",
                    "type": "Synth"
                }
            ]
        },
        "Synth": {
            "name": "Synth",
            "shortname": "Synth",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "synth",
            "namespace": "",
            "file": "src\\controller\\synth.js",
            "line": 13,
            "description": "Clase Fachada del controlador que se comunica con los elementos de la vista.",
            "is_constructor": 1
        },
        "Voice": {
            "name": "Voice",
            "shortname": "Voice",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "synth",
            "namespace": "",
            "file": "src\\controller\\voice.js",
            "line": 2,
            "description": "Clase que implementa la polifinia a partir de un conjunto de voces.\nCada voz se corresponde con un oscilador real de la Web Audio API",
            "is_constructor": 1,
            "params": [
                {
                    "name": "type",
                    "description": "Tipo de la onda",
                    "type": "String"
                },
                {
                    "name": "context",
                    "description": "Contexto de audi",
                    "type": "BaseAudioContext"
                },
                {
                    "name": "envelope",
                    "description": "Parametros de la envolvente",
                    "type": "Object"
                },
                {
                    "name": "gain",
                    "description": "Nodo de la ganancia del oscilador al que pertenece",
                    "type": "AudioNode"
                }
            ]
        },
        "Effect": {
            "name": "Effect",
            "shortname": "Effect",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "synth",
            "namespace": "",
            "file": "src\\view\\elements\\effects\\effect.js",
            "line": 4,
            "description": "Clase padre para los componentes relacionados con efectos",
            "is_constructor": 1,
            "params": [
                {
                    "name": "props",
                    "description": "Objeto que contiene las propiedades del componente",
                    "type": "Object"
                },
                {
                    "name": "type",
                    "description": "Tipo de efecto",
                    "type": "String"
                }
            ],
            "see": [
                "Effect"
            ]
        },
        "Reverb": {
            "name": "Reverb",
            "shortname": "Reverb",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "filterTypes",
            "namespace": "",
            "file": "src\\view\\elements\\effects\\reverb.js",
            "line": 9,
            "description": "Clase que genera el componente de la interfaz para el control\ndel efecto Rerverb",
            "is_constructor": 1,
            "params": [
                {
                    "name": "props",
                    "description": "Objeto que contiene las propiedades del componente",
                    "type": "Object"
                }
            ],
            "see": [
                "Effect"
            ]
        },
        "ModalDelete": {
            "name": "ModalDelete",
            "shortname": "ModalDelete",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "filterTypes",
            "namespace": "",
            "file": "src\\view\\elements\\modals\\modal-delete.js",
            "line": 7,
            "description": "Clase que genera el modal de la interfaz para borrar sonidos",
            "is_constructor": 1,
            "see": [
                "Modal"
            ]
        },
        "ModalLoad": {
            "name": "ModalLoad",
            "shortname": "ModalLoad",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "filterTypes",
            "namespace": "",
            "file": "src\\view\\elements\\modals\\modal-load.js",
            "line": 7,
            "description": "Clase que genera el modal de la interfaz para cargar sonidos",
            "is_constructor": 1,
            "see": [
                "Modal"
            ]
        },
        "ModalPassword": {
            "name": "ModalPassword",
            "shortname": "ModalPassword",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "filterTypes",
            "namespace": "",
            "file": "src\\view\\elements\\modals\\modal-password.js",
            "line": 6,
            "description": "Clase que genera el modal de la interfaz para editar la contraseña",
            "is_constructor": 1,
            "see": [
                "Modal"
            ]
        },
        "ModalSave": {
            "name": "ModalSave",
            "shortname": "ModalSave",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "filterTypes",
            "namespace": "",
            "file": "src\\view\\elements\\modals\\modal-save.js",
            "line": 7,
            "description": "Clase que genera el modal de la interfaz para guardar un sonido.",
            "is_constructor": 1,
            "see": [
                "Modal"
            ]
        },
        "Modal": {
            "name": "Modal",
            "shortname": "Modal",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "filterTypes",
            "namespace": "",
            "file": "src\\view\\elements\\modals\\modal.js",
            "line": 10,
            "description": "Clase que encapsula el comportamiento común de los modales.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "type",
                    "description": "Tipo de modal",
                    "type": "String"
                }
            ]
        },
        "Envelope": {
            "name": "Envelope",
            "shortname": "Envelope",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Knob",
            "namespace": "",
            "file": "src\\view\\elements\\envelope.js",
            "line": 6,
            "description": "La clase Envelope contiene el componente de la interfaz relativo a\nla envolvente de un oscilador. Proporciona un conjunto de knobs para modificar\nsus respectivos parametros (Attack,Sustain,Deacay,Release). \nclicando en este.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "props",
                    "description": "Propiedades de la envolvente",
                    "type": "Object"
                }
            ]
        },
        "LimitedKnob": {
            "name": "LimitedKnob",
            "shortname": "LimitedKnob",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Knob",
            "namespace": "",
            "file": "src\\view\\elements\\limitedKnob.js",
            "line": 13,
            "description": "Esta clase genera el componente de la interfaz para un knob limitado\nque puede ser usado para disitintos fines atendiendo a su tipo",
            "is_constructor": 1,
            "params": [
                {
                    "name": "props",
                    "description": "Objeto que contiene las propiedades del componente",
                    "type": "Object"
                }
            ]
        },
        "TableUI": {
            "name": "TableUI",
            "shortname": "TableUI",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Knob",
            "namespace": "",
            "file": "src\\view\\elements\\table.js",
            "line": 24,
            "description": "Representa el componente para la tabla de sonidos",
            "is_constructor": 1
        },
        "Anlyser": {
            "name": "Anlyser",
            "shortname": "Anlyser",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Knob",
            "namespace": "",
            "file": "src\\view\\analyser-component.js",
            "line": 6,
            "description": "La clase Analyser contiene el componente de la interfaz que proporciona los gráficos",
            "is_constructor": 1
        },
        "ErrorPage": {
            "name": "ErrorPage",
            "shortname": "ErrorPage",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Knob",
            "namespace": "",
            "file": "src\\view\\errorPage-component.js",
            "line": 8,
            "description": "Proporciona el componente para la vista de error",
            "is_constructor": 1
        },
        "Header": {
            "name": "Header",
            "shortname": "Header",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "FX",
            "namespace": "",
            "file": "src\\view\\head-component.js",
            "line": 16,
            "description": "Clase que proporciona el componente para los efectos",
            "is_constructor": 1
        },
        "Library": {
            "name": "Library",
            "shortname": "Library",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "FX",
            "namespace": "",
            "file": "src\\view\\library-components.js",
            "line": 8,
            "description": "Clase que proporciona el layer de la tabla de sonidos",
            "is_constructor": 1
        },
        "Login": {
            "name": "Login",
            "shortname": "Login",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "FX",
            "namespace": "",
            "file": "src\\view\\login-component.js",
            "line": 8,
            "description": "Proporciona el componente para el Login",
            "is_constructor": 1
        },
        "Navigator": {
            "name": "Navigator",
            "shortname": "Navigator",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Navigator",
            "namespace": "",
            "file": "src\\view\\navbar.js",
            "line": 14,
            "description": "Esta clase genera el componente de la interfaz correspondiente\ncon la barra de navegación",
            "is_constructor": 1
        },
        "Oscilador": {
            "name": "Oscilador",
            "shortname": "Oscilador",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "OscComponents",
            "namespace": "",
            "file": "src\\view\\osc-components.js",
            "line": 16,
            "description": "Esta clase contiene el componente de la interfaz que simula\nun oscilador analógico, de manera que el usuario pueda modificar sus parámetros",
            "is_constructor": 1
        },
        "Piano": {
            "name": "Piano",
            "shortname": "Piano",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Piano",
            "namespace": "",
            "file": "src\\view\\piano-component.js",
            "line": 10,
            "description": "La clase piano contiene el componente de la interfaz que simula\nun piano real, de manera que el usuario pueda repodrucir sonidos \nclicando en este.",
            "is_constructor": 1
        },
        "Profile": {
            "name": "Profile",
            "shortname": "Profile",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Piano",
            "namespace": "",
            "file": "src\\view\\profile-component.js",
            "line": 18,
            "description": "Proporciona un componente para el perfil de usuario",
            "is_constructor": 1
        },
        "SignUp": {
            "name": "SignUp",
            "shortname": "SignUp",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Piano",
            "namespace": "",
            "file": "src\\view\\signup-component.js",
            "line": 13,
            "description": "Proporciona el componente para el registro",
            "is_constructor": 1
        },
        "App": {
            "name": "App",
            "shortname": "App",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "App",
            "namespace": "",
            "file": "src\\App.js",
            "line": 13,
            "description": "Es la clase principal que contiene todos los componentes organizados",
            "is_constructor": 1
        },
        "Index": {
            "name": "Index",
            "shortname": "Index",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "App",
            "namespace": "",
            "file": "src\\index.js",
            "line": 33,
            "description": "Renderiza toda la aplicación",
            "is_constructor": 1
        }
    },
    "elements": {},
    "classitems": [
        {
            "file": "src\\controller\\analyser.js",
            "line": 16,
            "description": "Nodo analizador",
            "itemtype": "property",
            "name": "analyser",
            "type": "AnalyserNode",
            "access": "private",
            "tagname": "",
            "class": "Analyser"
        },
        {
            "file": "src\\controller\\analyser.js",
            "line": 23,
            "description": "Buffer de datos",
            "itemtype": "property",
            "name": "domain",
            "type": "Uint8Array",
            "access": "private",
            "tagname": "",
            "class": "Analyser"
        },
        {
            "file": "src\\controller\\analyser.js",
            "line": 30,
            "description": "Sample rate",
            "itemtype": "property",
            "name": "sampleRate",
            "type": "Integer",
            "access": "private",
            "tagname": "",
            "class": "Analyser"
        },
        {
            "file": "src\\controller\\analyser.js",
            "line": 37,
            "description": "Tamaño del buffer",
            "itemtype": "property",
            "name": "size",
            "type": "Integer",
            "access": "private",
            "tagname": "",
            "class": "Analyser"
        },
        {
            "file": "src\\controller\\analyser.js",
            "line": 62,
            "description": "Se encarga de analizar el flujo de audio",
            "itemtype": "method",
            "name": "analyse",
            "class": "Analyser"
        },
        {
            "file": "src\\controller\\analyser.js",
            "line": 73,
            "description": "Getter del tamaño del buffer",
            "itemtype": "method",
            "name": "getSize",
            "return": {
                "description": "tamaño",
                "type": "Integer"
            },
            "class": "Analyser"
        },
        {
            "file": "src\\controller\\analyser.js",
            "line": 83,
            "description": "Getter del número de frecuencias contenidas en cada posición del buffer",
            "itemtype": "method",
            "name": "getSeparation",
            "return": {
                "description": "Número de frecuencias",
                "type": "Float"
            },
            "class": "Analyser"
        },
        {
            "file": "src\\controller\\analyser.js",
            "line": 97,
            "description": "Getter del buffer con los datos",
            "itemtype": "method",
            "name": "getSeparation",
            "return": {
                "description": "Buffer",
                "type": "Uint8Array"
            },
            "class": "Analyser"
        },
        {
            "file": "src\\controller\\dbFetcher.js",
            "line": 14,
            "description": "Token de autorización",
            "itemtype": "property",
            "name": "token",
            "type": "String",
            "access": "private",
            "tagname": "",
            "class": "Analyser"
        },
        {
            "file": "src\\controller\\dbFetcher.js",
            "line": 21,
            "description": "Nombre de usuario",
            "itemtype": "property",
            "name": "user",
            "type": "String",
            "access": "private",
            "tagname": "",
            "class": "Analyser"
        },
        {
            "file": "src\\controller\\dbFetcher.js",
            "line": 44,
            "description": "Setter del token",
            "itemtype": "method",
            "name": "setToken",
            "params": [
                {
                    "name": "token",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "Analyser"
        },
        {
            "file": "src\\controller\\dbFetcher.js",
            "line": 54,
            "description": "Cambia las cookies almacenadas",
            "itemtype": "method",
            "name": "changeCookie",
            "params": [
                {
                    "name": "cookie",
                    "description": "Cookie a cambiar",
                    "type": "String"
                },
                {
                    "name": "value",
                    "description": "Nuevo valor",
                    "type": "String"
                }
            ],
            "class": "Analyser"
        },
        {
            "file": "src\\controller\\dbFetcher.js",
            "line": 66,
            "description": "Getter del valor de una cookie",
            "itemtype": "method",
            "name": "getCookie",
            "params": [
                {
                    "name": "cookie",
                    "description": "Cookie a devolver",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Cookie",
                "type": "String"
            },
            "class": "Analyser"
        },
        {
            "file": "src\\controller\\dbFetcher.js",
            "line": 77,
            "description": "Setter del nombre de usuario",
            "itemtype": "method",
            "name": "setUser",
            "params": [
                {
                    "name": "user",
                    "description": "Nombre de usurario",
                    "type": "String"
                }
            ],
            "class": "Analyser"
        },
        {
            "file": "src\\controller\\dbFetcher.js",
            "line": 87,
            "description": "Getter del nombre de usuario",
            "itemtype": "method",
            "name": "getUser",
            "return": {
                "description": "user Nombre de usurario",
                "type": "String"
            },
            "class": "Analyser"
        },
        {
            "file": "src\\controller\\dbFetcher.js",
            "line": 97,
            "description": "Getter del token",
            "itemtype": "method",
            "name": "getToken",
            "return": {
                "description": "token",
                "type": "String"
            },
            "class": "Analyser"
        },
        {
            "file": "src\\controller\\dbFetcher.js",
            "line": 107,
            "description": "Interpreta el código de respuesta de las peticiones",
            "itemtype": "method",
            "name": "handleStatus",
            "params": [
                {
                    "name": "status",
                    "description": "código",
                    "type": "Integer"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "Analyser"
        },
        {
            "file": "src\\controller\\delay.js",
            "line": 15,
            "description": "Duracion del efecto delay",
            "itemtype": "property",
            "name": "feedback",
            "type": "Object",
            "access": "private",
            "tagname": "",
            "class": "Delay"
        },
        {
            "file": "src\\controller\\delay.js",
            "line": 35,
            "description": "Metodo que se encarga de aplicar el efecto delay sobre el input",
            "itemtype": "method",
            "name": "apply",
            "class": "Delay"
        },
        {
            "file": "src\\controller\\delay.js",
            "line": 48,
            "class": "Delay"
        },
        {
            "file": "src\\controller\\delay.js",
            "line": 50,
            "description": "Getter del estado del efecto",
            "itemtype": "method",
            "name": "getState",
            "return": {
                "description": "JSON"
            },
            "class": "Delay"
        },
        {
            "file": "src\\controller\\delay.js",
            "line": 63,
            "class": "Delay"
        },
        {
            "file": "src\\controller\\delay.js",
            "line": 64,
            "description": "Setter del tiempo del delay",
            "itemtype": "method",
            "name": "setTime",
            "params": [
                {
                    "name": "tempo",
                    "description": "Fracción de tiempo de delay",
                    "type": "String"
                }
            ],
            "class": "Delay"
        },
        {
            "file": "src\\controller\\delay.js",
            "line": 98,
            "description": "Setter del feedback del efecto delay",
            "itemtype": "method",
            "name": "setFeedback",
            "params": [
                {
                    "name": "val",
                    "description": "Nivel de feedback",
                    "type": "Float"
                }
            ],
            "class": "Delay"
        },
        {
            "file": "src\\controller\\distorsion.js",
            "line": 15,
            "description": "Cantidad de distorsion",
            "itemtype": "property",
            "name": "amount",
            "type": "Float",
            "access": "private",
            "tagname": "",
            "class": "Distorsion",
            "module": "Delay"
        },
        {
            "file": "src\\controller\\distorsion.js",
            "line": 32,
            "description": "Método que se encarga de calcular la curva de distorsion \nnecesaria para aplicar el efecto de distorsion",
            "itemtype": "method",
            "name": "makeDistortionCurve",
            "params": [
                {
                    "name": "amount",
                    "description": "Cantidad de distorsion",
                    "type": "Float"
                }
            ],
            "return": {
                "description": "Curva de distorsion",
                "type": "Float"
            },
            "class": "Distorsion",
            "module": "Delay"
        },
        {
            "file": "src\\controller\\distorsion.js",
            "line": 55,
            "description": "Setter de la curva de distorsion",
            "itemtype": "method",
            "name": "setDistorsionCurve",
            "params": [
                {
                    "name": "amount",
                    "description": "Cantidad de distorsion",
                    "type": "Float"
                }
            ],
            "class": "Distorsion",
            "module": "Delay"
        },
        {
            "file": "src\\controller\\distorsion.js",
            "line": 66,
            "description": "Metodo que se encarga de aplicar el efecto de distorsion sobre el input",
            "itemtype": "method",
            "name": "apply",
            "class": "Distorsion",
            "module": "Delay"
        },
        {
            "file": "src\\controller\\distorsion.js",
            "line": 75,
            "description": "Getter del estado del efecto",
            "itemtype": "method",
            "name": "getState",
            "return": {
                "description": "JSON"
            },
            "class": "Distorsion",
            "module": "Delay"
        },
        {
            "file": "src\\controller\\effect.js",
            "line": 13,
            "description": "Contiene el nodo correspondiente al efecto",
            "itemtype": "property",
            "name": "effect",
            "type": "AudioNode",
            "access": "protected",
            "tagname": "",
            "class": "Distorsion",
            "module": "Distorsion"
        },
        {
            "file": "src\\controller\\effect.js",
            "line": 21,
            "description": "Contiene el nodo de ganancia sobre el que se aplica el efecto",
            "itemtype": "property",
            "name": "input",
            "type": "AudioNode",
            "access": "protected",
            "tagname": "",
            "class": "Distorsion",
            "module": "Distorsion"
        },
        {
            "file": "src\\controller\\effect.js",
            "line": 29,
            "description": "Contiene el nodo de ganancia de salida con el efecto aplicao",
            "itemtype": "property",
            "name": "output",
            "type": "AudioNode",
            "access": "protected",
            "tagname": "",
            "class": "Distorsion",
            "module": "Distorsion"
        },
        {
            "file": "src\\controller\\effect.js",
            "line": 37,
            "description": "Contiene el nodo para controlar el volumen del nodo del efecto",
            "itemtype": "property",
            "name": "wet",
            "type": "AudioNode",
            "access": "protected",
            "tagname": "",
            "class": "Distorsion",
            "module": "Distorsion"
        },
        {
            "file": "src\\controller\\effect.js",
            "line": 45,
            "description": "Booleano para controlar si esta encendido o apagado el efecto",
            "itemtype": "property",
            "name": "on",
            "type": "Boolean",
            "access": "private",
            "tagname": "",
            "class": "Distorsion",
            "module": "Distorsion"
        },
        {
            "file": "src\\controller\\effect.js",
            "line": 53,
            "description": "Almacena el estado del efecto",
            "itemtype": "property",
            "name": "state",
            "type": "object",
            "access": "protected",
            "tagname": "",
            "class": "Distorsion",
            "module": "Distorsion"
        },
        {
            "file": "src\\controller\\effect.js",
            "line": 74,
            "description": "Método que desaplica el efecto",
            "itemtype": "method",
            "name": "disapply",
            "class": "Distorsion",
            "module": "Distorsion"
        },
        {
            "file": "src\\controller\\effect.js",
            "line": 84,
            "description": "Metodo que se encarga de conectar el input con el efecto y \nel wet con el output",
            "itemtype": "method",
            "name": "apply",
            "class": "Distorsion",
            "module": "Distorsion"
        },
        {
            "file": "src\\controller\\effect.js",
            "line": 97,
            "description": "Devuelve el estado en la variable state",
            "itemtype": "method",
            "name": "getState",
            "class": "Distorsion",
            "module": "Distorsion"
        },
        {
            "file": "src\\controller\\effect.js",
            "line": 107,
            "description": "Setter de la cantidad de efecto aplicada",
            "itemtype": "method",
            "name": "setWet",
            "params": [
                {
                    "name": "val",
                    "description": "Nivel de volumen que se quiere aplicar",
                    "type": "Float"
                }
            ],
            "class": "Distorsion",
            "module": "Distorsion"
        },
        {
            "file": "src\\controller\\equalizer.js",
            "line": 15,
            "description": "Node para el filtro de frecuencias bajas",
            "itemtype": "property",
            "name": "lw",
            "type": "AudioNode",
            "access": "private",
            "tagname": "",
            "class": "Equalizer",
            "module": "Distorsion"
        },
        {
            "file": "src\\controller\\equalizer.js",
            "line": 22,
            "description": "Node para el filtro de frecuencias medias bajas",
            "itemtype": "property",
            "name": "lwm",
            "type": "AudioNode",
            "access": "private",
            "tagname": "",
            "class": "Equalizer",
            "module": "Distorsion"
        },
        {
            "file": "src\\controller\\equalizer.js",
            "line": 29,
            "description": "Node para el filtro de frecuencias medias",
            "itemtype": "property",
            "name": "mid",
            "type": "AudioNode",
            "access": "private",
            "tagname": "",
            "class": "Equalizer",
            "module": "Distorsion"
        },
        {
            "file": "src\\controller\\equalizer.js",
            "line": 36,
            "description": "Node para el filtro de frecuencias medias altas",
            "itemtype": "property",
            "name": "hgm",
            "type": "AudioNode",
            "access": "private",
            "tagname": "",
            "class": "Equalizer",
            "module": "Distorsion"
        },
        {
            "file": "src\\controller\\equalizer.js",
            "line": 43,
            "description": "Node para el filtro de frecuencias altas",
            "itemtype": "property",
            "name": "hg",
            "type": "AudioNode",
            "access": "private",
            "tagname": "",
            "class": "Equalizer",
            "module": "Distorsion"
        },
        {
            "file": "src\\controller\\equalizer.js",
            "line": 80,
            "description": "Metodo que inicializa las propiedades de los filtros",
            "itemtype": "method",
            "name": "setProperties",
            "access": "private",
            "tagname": "",
            "class": "Equalizer",
            "module": "Distorsion"
        },
        {
            "file": "src\\controller\\equalizer.js",
            "line": 113,
            "description": "Método que se encarga de ecualizar",
            "itemtype": "method",
            "name": "equalize",
            "params": [
                {
                    "name": "freq",
                    "description": "Frecuencias a las que afectara",
                    "type": "String"
                },
                {
                    "name": "value",
                    "description": "Valor nuevo",
                    "type": "Float"
                }
            ],
            "class": "Equalizer",
            "module": "Distorsion"
        },
        {
            "file": "src\\controller\\filter.js",
            "line": 28,
            "description": "Tipo de filtro",
            "itemtype": "property",
            "name": "type",
            "type": "String",
            "access": "private",
            "tagname": "",
            "class": "Filter",
            "module": "Distorsion"
        },
        {
            "file": "src\\controller\\filter.js",
            "line": 47,
            "description": "Metodo que se encarga de aplicar el efecto de filtro sobre el input",
            "itemtype": "method",
            "name": "apply",
            "class": "Filter",
            "module": "Distorsion"
        },
        {
            "file": "src\\controller\\filter.js",
            "line": 57,
            "description": "Método que se encarga de inicializar el filtro",
            "itemtype": "method",
            "name": "init",
            "params": [
                {
                    "name": "type",
                    "description": "de filtro",
                    "type": "String"
                }
            ],
            "class": "Filter",
            "module": "Distorsion"
        },
        {
            "file": "src\\controller\\filter.js",
            "line": 69,
            "description": "Metodo que es usado en el reverb para conectar los filtros\na este otro efecto",
            "itemtype": "method",
            "name": "connect",
            "params": [
                {
                    "name": "input",
                    "description": "Entrada",
                    "type": "Object"
                },
                {
                    "name": "output",
                    "description": "Salida",
                    "type": "Object"
                }
            ],
            "class": "Filter",
            "module": "Distorsion"
        },
        {
            "file": "src\\controller\\filter.js",
            "line": 83,
            "description": "Método que inicializa las frecuencias en función del \ntipo de filtro",
            "itemtype": "method",
            "name": "setinitFrecuencies",
            "class": "Filter",
            "module": "Distorsion"
        },
        {
            "file": "src\\controller\\filter.js",
            "line": 119,
            "class": "Filter",
            "module": "Distorsion"
        },
        {
            "file": "src\\controller\\filter.js",
            "line": 121,
            "description": "Devuelve la frecuencia de inicia de actuación del filtr",
            "itemtype": "method",
            "name": "getFrecuency",
            "return": {
                "description": "Float"
            },
            "class": "Filter",
            "module": "Distorsion"
        },
        {
            "file": "src\\controller\\filter.js",
            "line": 131,
            "description": "Getter del estado del efecto",
            "itemtype": "method",
            "name": "getState",
            "return": {
                "description": "JSON"
            },
            "class": "Filter",
            "module": "Distorsion"
        },
        {
            "file": "src\\controller\\filter.js",
            "line": 145,
            "class": "Filter",
            "module": "Distorsion"
        },
        {
            "file": "src\\controller\\filter.js",
            "line": 148,
            "description": "Setter de la frecuencia del filtro",
            "itemtype": "method",
            "name": "setFrecuency",
            "params": [
                {
                    "name": "val",
                    "description": "",
                    "type": "Float"
                }
            ],
            "class": "Filter",
            "module": "Distorsion"
        },
        {
            "file": "src\\controller\\filter.js",
            "line": 159,
            "description": "Setter del tipo de filtro",
            "itemtype": "method",
            "name": "setType",
            "params": [
                {
                    "name": "type",
                    "description": "tipo de filtro",
                    "type": "String"
                }
            ],
            "class": "Filter",
            "module": "Distorsion"
        },
        {
            "file": "src\\controller\\loader.js",
            "line": 14,
            "description": "Método HTTP",
            "itemtype": "property",
            "name": "method",
            "type": "String",
            "access": "private",
            "tagname": "",
            "class": "Loader",
            "module": "Filter"
        },
        {
            "file": "src\\controller\\loader.js",
            "line": 22,
            "description": "Perfil",
            "itemtype": "property",
            "name": "profile",
            "type": "Objet",
            "class": "Loader",
            "module": "Filter"
        },
        {
            "file": "src\\controller\\loader.js",
            "line": 30,
            "description": "Tamaño máximo",
            "itemtype": "property",
            "name": "maxSize",
            "type": "Object",
            "class": "Loader",
            "module": "Filter"
        },
        {
            "file": "src\\controller\\loader.js",
            "line": 48,
            "description": "Realiza una petición para obtener el tamaño máximo de almacenamiento\ndisponible para un usuario",
            "itemtype": "method",
            "name": "fetchMaxSize",
            "return": {
                "description": "Tamaño máximo",
                "type": "Object"
            },
            "async": 1,
            "class": "Loader",
            "module": "Filter"
        },
        {
            "file": "src\\controller\\loader.js",
            "line": 86,
            "description": "Realiza una petición para obtener el perfil de un usuario",
            "itemtype": "method",
            "name": "fetchProfile",
            "return": {
                "description": "Perfil",
                "type": "Object"
            },
            "async": 1,
            "class": "Loader",
            "module": "Filter"
        },
        {
            "file": "src\\controller\\loader.js",
            "line": 123,
            "description": "Realiza una petición a la URL pasada como parámetro",
            "itemtype": "method",
            "name": "fetchUrl",
            "params": [
                {
                    "name": "url",
                    "description": "URL a la que se realiza la petición",
                    "type": "String"
                },
                {
                    "name": "requestOptions",
                    "description": "Opciones de la petición",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "respuesta",
                "type": "Object"
            },
            "access": "private",
            "tagname": "",
            "async": 1,
            "class": "Loader",
            "module": "Filter"
        },
        {
            "file": "src\\controller\\loader.js",
            "line": 166,
            "description": "Realiza una petición para obtener las categorías",
            "itemtype": "method",
            "name": "fetchCategories",
            "return": {
                "description": "Categorías",
                "type": "Object"
            },
            "async": 1,
            "class": "Loader",
            "module": "Filter"
        },
        {
            "file": "src\\controller\\loader.js",
            "line": 186,
            "description": "Realiza una petición para obtener un sonido",
            "itemtype": "method",
            "name": "fetchCategories",
            "params": [
                {
                    "name": "id",
                    "description": "Identificador del sonido",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Sonido",
                "type": "Object"
            },
            "async": 1,
            "class": "Loader",
            "module": "Filter"
        },
        {
            "file": "src\\controller\\loader.js",
            "line": 212,
            "description": "Realiza una petición para obtener los metadatos de los sonidos",
            "itemtype": "method",
            "name": "fetchStatesMetadata",
            "return": {
                "description": "Sonidos",
                "type": "Object"
            },
            "async": 1,
            "class": "Loader",
            "module": "Filter"
        },
        {
            "file": "src\\controller\\midi.js",
            "line": 13,
            "description": "Objeto midi",
            "itemtype": "property",
            "name": "Midi",
            "type": "Object",
            "access": "private",
            "tagname": "",
            "class": "Midi",
            "module": "Filter"
        },
        {
            "file": "src\\controller\\midi.js",
            "line": 21,
            "itemtype": "property",
            "name": "input",
            "type": "Object",
            "access": "private",
            "tagname": "",
            "class": "Midi",
            "module": "Filter"
        },
        {
            "file": "src\\controller\\midi.js",
            "line": 28,
            "itemtype": "property",
            "name": "output",
            "type": "Object",
            "access": "private",
            "tagname": "",
            "class": "Midi",
            "module": "Filter"
        },
        {
            "file": "src\\controller\\midi.js",
            "line": 36,
            "description": "Diccionario de notas",
            "itemtype": "property",
            "name": "notes",
            "type": "Object",
            "access": "private",
            "tagname": "",
            "class": "Midi",
            "module": "Filter"
        },
        {
            "file": "src\\controller\\midi.js",
            "line": 44,
            "itemtype": "property",
            "name": "lastOn",
            "type": "Boolean",
            "access": "private",
            "tagname": "",
            "class": "Midi",
            "module": "Filter"
        },
        {
            "file": "src\\controller\\midi.js",
            "line": 51,
            "description": "Instancia del sintetizador",
            "itemtype": "property",
            "name": "synth",
            "type": "synth",
            "access": "private",
            "tagname": "",
            "class": "Midi",
            "module": "Filter"
        },
        {
            "file": "src\\controller\\midi.js",
            "line": 59,
            "itemtype": "property",
            "name": "ceil",
            "type": "Integer",
            "access": "private",
            "tagname": "",
            "class": "Midi",
            "module": "Filter"
        },
        {
            "file": "src\\controller\\midi.js",
            "line": 66,
            "itemtype": "property",
            "name": "octave",
            "type": "Integer",
            "access": "private",
            "tagname": "",
            "class": "Midi",
            "module": "Filter"
        },
        {
            "file": "src\\controller\\midi.js",
            "line": 73,
            "itemtype": "property",
            "name": "init",
            "type": "Boolean",
            "class": "Midi",
            "module": "Filter"
        },
        {
            "file": "src\\controller\\midi.js",
            "line": 107,
            "description": "Realiza una petición para obtener las notas",
            "itemtype": "method",
            "name": "fetchNotes",
            "async": 1,
            "class": "Midi",
            "module": "Filter"
        },
        {
            "file": "src\\controller\\midi.js",
            "line": 123,
            "description": "Accede a la comunicación MIDI",
            "itemtype": "method",
            "name": "requestAccess",
            "class": "Midi",
            "module": "Filter"
        },
        {
            "file": "src\\controller\\midi.js",
            "line": 145,
            "description": "Selecciona un dispositvo MIDI para establecer comunicación",
            "itemtype": "method",
            "name": "initDevices",
            "class": "Midi",
            "module": "Filter"
        },
        {
            "file": "src\\controller\\midi.js",
            "line": 181,
            "description": "Enseña el nombre del dispositvo MIDI por pantalla",
            "itemtype": "method",
            "name": "showDevice",
            "params": [
                {
                    "name": "msg",
                    "description": "",
                    "type": "String"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Midi",
            "module": "Filter"
        },
        {
            "file": "src\\controller\\midi.js",
            "line": 196,
            "description": "Manejador para los mensajes del dispositivo MIDI",
            "itemtype": "method",
            "name": "handleMidiMessage",
            "params": [
                {
                    "name": "event",
                    "description": "",
                    "type": "Event"
                }
            ],
            "class": "Midi",
            "module": "Filter"
        },
        {
            "file": "src\\controller\\midi.js",
            "line": 303,
            "description": "Transforma un código MIDI en una frecuencia",
            "itemtype": "method",
            "name": "midiNoteToFrequency",
            "params": [
                {
                    "name": "note",
                    "description": "Código de nota MIDI",
                    "type": "Integer"
                }
            ],
            "return": {
                "description": "frecuencia",
                "type": "Float"
            },
            "access": "private",
            "tagname": "",
            "class": "Midi",
            "module": "Filter"
        },
        {
            "file": "src\\controller\\midi.js",
            "line": 329,
            "description": "Comprueba si una frecuencia se corresponde con una nota",
            "itemtype": "method",
            "name": "checkNote",
            "params": [
                {
                    "name": "freq",
                    "description": "frecuencia",
                    "type": "Float"
                }
            ],
            "return": {
                "description": "key de la nota",
                "type": "String"
            },
            "access": "private",
            "tagname": "",
            "class": "Midi",
            "module": "Filter"
        },
        {
            "file": "src\\controller\\midi.js",
            "line": 355,
            "description": "Setter de la octava",
            "itemtype": "method",
            "name": "setOctave",
            "params": [
                {
                    "name": "oct",
                    "description": "",
                    "type": "Integer"
                }
            ],
            "class": "Midi",
            "module": "Filter"
        },
        {
            "file": "src\\controller\\oscillator.js",
            "line": 11,
            "description": "Contexto de audio para la aplicación de la Web Audio API",
            "itemtype": "property",
            "name": "audioCtx",
            "type": "BaseAudioContext",
            "access": "private",
            "tagname": "",
            "class": "oscillator",
            "module": "Filter"
        },
        {
            "file": "src\\controller\\oscillator.js",
            "line": 18,
            "description": "Nodo de ganancia del oscilador para controlar el volumen de este",
            "itemtype": "property",
            "name": "gainNode",
            "type": "AudioNode",
            "access": "private",
            "tagname": "",
            "class": "oscillator",
            "module": "Filter"
        },
        {
            "file": "src\\controller\\oscillator.js",
            "line": 25,
            "description": "Guarda los valores de la envolvente",
            "itemtype": "property",
            "name": "envelope",
            "type": "Object",
            "access": "private",
            "tagname": "",
            "class": "oscillator",
            "module": "Filter"
        },
        {
            "file": "src\\controller\\oscillator.js",
            "line": 32,
            "description": "Volumen del oscilador",
            "itemtype": "property",
            "name": "volume",
            "type": "Float",
            "access": "private",
            "tagname": "",
            "class": "oscillator",
            "module": "Filter"
        },
        {
            "file": "src\\controller\\oscillator.js",
            "line": 39,
            "description": "Flag que representa la disponibilidad del oscilador",
            "itemtype": "property",
            "name": "available",
            "type": "Boolean",
            "access": "private",
            "tagname": "",
            "class": "oscillator",
            "module": "Filter"
        },
        {
            "file": "src\\controller\\oscillator.js",
            "line": 46,
            "description": "Contiene una instancia de la clase Voice para lograr la polifonia",
            "itemtype": "property",
            "name": "voice",
            "type": "AudioNode",
            "class": "oscillator",
            "module": "Filter"
        },
        {
            "file": "src\\controller\\oscillator.js",
            "line": 52,
            "description": "Nodo que se encarga del paneo del oscilador",
            "itemtype": "property",
            "name": "#panNode",
            "type": "AudioNode",
            "class": "oscillator",
            "module": "Filter"
        },
        {
            "file": "src\\controller\\oscillator.js",
            "line": 57,
            "description": "Glag para controlar que el oscilador esa marcado",
            "itemtype": "property",
            "name": "checked",
            "type": "Boolean",
            "class": "oscillator",
            "module": "Filter"
        },
        {
            "file": "src\\controller\\oscillator.js",
            "line": 107,
            "description": "Método que enciende el oscilador",
            "itemtype": "method",
            "name": "onOscillator",
            "class": "oscillator",
            "module": "Filter"
        },
        {
            "file": "src\\controller\\oscillator.js",
            "line": 116,
            "description": "Método que apaga el oscilador",
            "itemtype": "method",
            "name": "offOscillator",
            "class": "oscillator",
            "module": "Filter"
        },
        {
            "file": "src\\controller\\oscillator.js",
            "line": 128,
            "description": "Método que reproduce una de las voces, dependiendo de la nota pasada \ncomo argumento",
            "itemtype": "method",
            "name": "play",
            "params": [
                {
                    "name": "key",
                    "description": "Frecuencia",
                    "type": "String"
                }
            ],
            "class": "oscillator",
            "module": "Filter"
        },
        {
            "file": "src\\controller\\oscillator.js",
            "line": 150,
            "description": "Getter de la disponibilidad del oscilador",
            "itemtype": "method",
            "name": "getAvailable",
            "return": {
                "description": "Boolean"
            },
            "class": "oscillator",
            "module": "Filter"
        },
        {
            "file": "src\\controller\\oscillator.js",
            "line": 160,
            "description": "Getter del flag checked",
            "itemtype": "method",
            "name": "getChecked",
            "return": {
                "description": "Boolean"
            },
            "class": "oscillator",
            "module": "Filter"
        },
        {
            "file": "src\\controller\\oscillator.js",
            "line": 170,
            "description": "Getter de la envolvente",
            "itemtype": "method",
            "name": "getEnvelope",
            "return": {
                "description": "JSON"
            },
            "class": "oscillator",
            "module": "Filter"
        },
        {
            "file": "src\\controller\\oscillator.js",
            "line": 180,
            "description": "Getter del estado",
            "itemtype": "method",
            "name": "getState",
            "return": {
                "description": "JSON"
            },
            "class": "oscillator",
            "module": "Filter"
        },
        {
            "file": "src\\controller\\oscillator.js",
            "line": 199,
            "description": "Setter del flag checked",
            "itemtype": "method",
            "name": "setChecked",
            "params": [
                {
                    "name": "c",
                    "description": "valor",
                    "type": "Boolean"
                }
            ],
            "class": "oscillator",
            "module": "Filter"
        },
        {
            "file": "src\\controller\\oscillator.js",
            "line": 208,
            "description": "Setter del nivel de paneo del oscilador, -1 izquierda, +1 derecha.",
            "itemtype": "method",
            "name": "setPan",
            "params": [
                {
                    "name": "value",
                    "description": "valor de paneo",
                    "type": "Float"
                }
            ],
            "class": "oscillator",
            "module": "Filter"
        },
        {
            "file": "src\\controller\\oscillator.js",
            "line": 218,
            "description": "Setter del tipo de onda",
            "itemtype": "method",
            "name": "setWave",
            "params": [
                {
                    "name": "wave",
                    "description": "Onda",
                    "type": "String"
                }
            ],
            "class": "oscillator",
            "module": "Filter"
        },
        {
            "file": "src\\controller\\oscillator.js",
            "line": 229,
            "description": "Setter del volumen",
            "itemtype": "method",
            "name": "setVolum",
            "params": [
                {
                    "name": "level",
                    "description": "Volumen",
                    "type": "Float"
                }
            ],
            "class": "oscillator",
            "module": "Filter"
        },
        {
            "file": "src\\controller\\oscillator.js",
            "line": 244,
            "description": "Setter del Attack",
            "itemtype": "method",
            "name": "setAttack",
            "params": [
                {
                    "name": "val",
                    "description": "Valor",
                    "type": "Float"
                }
            ],
            "class": "oscillator",
            "module": "Filter"
        },
        {
            "file": "src\\controller\\oscillator.js",
            "line": 255,
            "description": "Setter del Release",
            "itemtype": "method",
            "name": "setRelease",
            "params": [
                {
                    "name": "val",
                    "description": "Valor",
                    "type": "Float"
                }
            ],
            "class": "oscillator",
            "module": "Filter"
        },
        {
            "file": "src\\controller\\oscillator.js",
            "line": 265,
            "description": "Setter del Sustain",
            "itemtype": "method",
            "name": "setSustain",
            "params": [
                {
                    "name": "val",
                    "description": "Valor",
                    "type": "Float"
                }
            ],
            "class": "oscillator",
            "module": "Filter"
        },
        {
            "file": "src\\controller\\oscillator.js",
            "line": 275,
            "description": "Setter del Decay",
            "itemtype": "method",
            "name": "setDecay",
            "params": [
                {
                    "name": "val",
                    "description": "Valor",
                    "type": "Float"
                }
            ],
            "class": "oscillator",
            "module": "Filter"
        },
        {
            "file": "src\\controller\\recorder.js",
            "line": 13,
            "description": "Objeto que se va a encargar de crear un canal stream\ncon el audio saliente",
            "itemtype": "property",
            "name": "source",
            "type": "MediaStreamDestinationNode",
            "access": "private",
            "tagname": "",
            "class": "Recorder",
            "module": "Filter"
        },
        {
            "file": "src\\controller\\recorder.js",
            "line": 22,
            "description": "Objeto que se va a encargar de grabar el sonido",
            "itemtype": "property",
            "name": "mediarecorder",
            "type": "MediaRecorder",
            "access": "private",
            "tagname": "",
            "class": "Recorder",
            "module": "Filter"
        },
        {
            "file": "src\\controller\\recorder.js",
            "line": 30,
            "itemtype": "property",
            "name": "pause",
            "type": "Boolean",
            "access": "private",
            "tagname": "",
            "class": "Recorder",
            "module": "Filter"
        },
        {
            "file": "src\\controller\\recorder.js",
            "line": 36,
            "itemtype": "property",
            "name": "start",
            "type": "Boolean",
            "access": "private",
            "tagname": "",
            "class": "Recorder",
            "module": "Filter"
        },
        {
            "file": "src\\controller\\recorder.js",
            "line": 69,
            "description": "Método que gestiona el proceso de grabación",
            "itemtype": "method",
            "name": "rec",
            "params": [
                {
                    "name": "state",
                    "description": "Acción a realizar",
                    "type": "String"
                }
            ],
            "class": "Recorder",
            "module": "Filter"
        },
        {
            "file": "src\\controller\\reverb.js",
            "line": 16,
            "description": "Tiempo que tarda en desaparecer el reverb progresivamente",
            "itemtype": "property",
            "name": "decay",
            "type": "Float",
            "access": "private",
            "tagname": "",
            "class": "Distorsion",
            "module": "Filter"
        },
        {
            "file": "src\\controller\\reverb.js",
            "line": 24,
            "description": "Nodo de ganancia auxiliar",
            "itemtype": "property",
            "name": "gainAux",
            "type": "AudioNode",
            "access": "private",
            "tagname": "",
            "class": "Distorsion",
            "module": "Filter"
        },
        {
            "file": "src\\controller\\reverb.js",
            "line": 32,
            "description": "Nodo de ganancia para el filtro",
            "itemtype": "property",
            "name": "gainFilter",
            "type": "AudioNode",
            "access": "private",
            "tagname": "",
            "class": "Distorsion",
            "module": "Filter"
        },
        {
            "file": "src\\controller\\reverb.js",
            "line": 40,
            "description": "Filtro pasa bajos del reverb",
            "itemtype": "property",
            "name": "lpf",
            "type": "Filter",
            "access": "private",
            "tagname": "",
            "class": "Distorsion",
            "module": "Filter"
        },
        {
            "file": "src\\controller\\reverb.js",
            "line": 48,
            "description": "Filtro pasa altos del reverb",
            "itemtype": "property",
            "name": "hpf",
            "type": "Filter",
            "access": "private",
            "tagname": "",
            "class": "Distorsion",
            "module": "Filter"
        },
        {
            "file": "src\\controller\\reverb.js",
            "line": 73,
            "description": "Actualiza el impulso",
            "itemtype": "method",
            "name": "updateImpulse",
            "params": [
                {
                    "name": "val",
                    "description": "Tiempo de caida",
                    "type": "Float"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Distorsion",
            "module": "Filter"
        },
        {
            "file": "src\\controller\\reverb.js",
            "line": 86,
            "description": "Método que se encarga de generar un impulso necesario para\ngenerar un efecto de reverb",
            "params": [
                {
                    "name": "duration",
                    "description": "Duracion del impulso",
                    "type": "Float"
                },
                {
                    "name": "decay",
                    "description": "Tiempo que tarda en caer la amplitud del impulso",
                    "type": "Float"
                },
                {
                    "name": "reverse",
                    "description": "",
                    "type": "Float"
                }
            ],
            "return": {
                "description": "Impulso",
                "type": "Object"
            },
            "class": "Distorsion",
            "module": "Filter"
        },
        {
            "file": "src\\controller\\reverb.js",
            "line": 115,
            "description": "Metodo que se encarga de aplicar el efecto de reverb sobre el input",
            "itemtype": "method",
            "name": "apply",
            "class": "Distorsion",
            "module": "Filter"
        },
        {
            "file": "src\\controller\\reverb.js",
            "line": 129,
            "class": "Distorsion",
            "module": "Filter"
        },
        {
            "file": "src\\controller\\reverb.js",
            "line": 131,
            "description": "Getter del estado del efecto",
            "itemtype": "method",
            "name": "getState",
            "return": {
                "description": "JSON"
            },
            "class": "Distorsion",
            "module": "Filter"
        },
        {
            "file": "src\\controller\\reverb.js",
            "line": 147,
            "class": "Distorsion",
            "module": "Filter"
        },
        {
            "file": "src\\controller\\reverb.js",
            "line": 149,
            "description": "Setter de la frecuencia del filtro pasa altos",
            "itemtype": "method",
            "name": "setHPF",
            "params": [
                {
                    "name": "val",
                    "description": "Frecuencia de corte",
                    "type": "Float"
                }
            ],
            "class": "Distorsion",
            "module": "Filter"
        },
        {
            "file": "src\\controller\\reverb.js",
            "line": 158,
            "description": "Setter de la frecuencia del filtro pasa bajos",
            "itemtype": "method",
            "name": "setLPF",
            "params": [
                {
                    "name": "val",
                    "description": "Frecuencia de corte",
                    "type": "Float"
                }
            ],
            "class": "Distorsion",
            "module": "Filter"
        },
        {
            "file": "src\\controller\\reverb.js",
            "line": 169,
            "description": "Setter del tiempo de caida",
            "itemtype": "method",
            "name": "setDecay",
            "params": [
                {
                    "name": "val",
                    "description": "Tiempo de caida",
                    "type": "Float"
                }
            ],
            "class": "Distorsion",
            "module": "Filter"
        },
        {
            "file": "src\\controller\\saver.js",
            "line": 16,
            "itemtype": "property",
            "name": "envelopes",
            "type": "Object",
            "class": "Saver",
            "module": "Reverb"
        },
        {
            "file": "src\\controller\\saver.js",
            "line": 22,
            "itemtype": "property",
            "name": "oscilators",
            "type": "Object",
            "class": "Saver",
            "module": "Reverb"
        },
        {
            "file": "src\\controller\\saver.js",
            "line": 28,
            "itemtype": "property",
            "name": "oscilatorA",
            "type": "oscillator",
            "class": "Saver",
            "module": "Reverb"
        },
        {
            "file": "src\\controller\\saver.js",
            "line": 34,
            "itemtype": "property",
            "name": "oscilatorB",
            "type": "oscillator",
            "class": "Saver",
            "module": "Reverb"
        },
        {
            "file": "src\\controller\\saver.js",
            "line": 62,
            "description": "Obtiene la información de las envolventes",
            "itemtype": "method",
            "name": "getEnvelopes",
            "access": "private",
            "tagname": "",
            "class": "Saver",
            "module": "Reverb"
        },
        {
            "file": "src\\controller\\saver.js",
            "line": 73,
            "description": "Obtiene la información de los osciladores",
            "itemtype": "method",
            "name": "getOscillators",
            "access": "private",
            "tagname": "",
            "class": "Saver",
            "module": "Reverb"
        },
        {
            "file": "src\\controller\\saver.js",
            "line": 92,
            "description": "Obtiene la información de los efectos",
            "itemtype": "method",
            "name": "getEffects",
            "access": "private",
            "tagname": "",
            "class": "Saver",
            "module": "Reverb"
        },
        {
            "file": "src\\controller\\saver.js",
            "line": 102,
            "description": "Manda una petición para guardar un sonido",
            "itemtype": "method",
            "name": "sendRequest",
            "params": [
                {
                    "name": "toSave",
                    "description": "",
                    "type": "Object"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Saver",
            "module": "Reverb"
        },
        {
            "file": "src\\controller\\saver.js",
            "line": 155,
            "description": "Se encarga de recopilar la información de los sonidos y \ndar orden para mandar la petición de guardado",
            "itemtype": "method",
            "name": "save",
            "params": [
                {
                    "name": "data",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Respuesta del servidor",
                "type": "Object"
            },
            "async": 1,
            "class": "Saver",
            "module": "Reverb"
        },
        {
            "file": "src\\controller\\saver.js",
            "line": 178,
            "description": "Manda una petición para editar el perfil de usuario",
            "itemtype": "method",
            "name": "editProfile",
            "params": [
                {
                    "name": "data",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Respuesta del servidor",
                "type": "Object"
            },
            "async": 1,
            "class": "Saver",
            "module": "Reverb"
        },
        {
            "file": "src\\controller\\saver.js",
            "line": 229,
            "description": "Manda una petición para editar la contraseña de usuario",
            "itemtype": "method",
            "name": "editPassword",
            "params": [
                {
                    "name": "data",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Respuesta del servidor",
                "type": "Object"
            },
            "async": 1,
            "class": "Saver",
            "module": "Reverb"
        },
        {
            "file": "src\\controller\\saver.js",
            "line": 276,
            "description": "Manda una petición para borrar un sonido",
            "itemtype": "method",
            "name": "delete",
            "params": [
                {
                    "name": "id",
                    "description": "Identificador del sondio",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Respuesta del servidor",
                "type": "Object"
            },
            "async": 1,
            "class": "Saver",
            "module": "Reverb"
        },
        {
            "file": "src\\controller\\synth.js",
            "line": 20,
            "description": "Instancia del osciladorA",
            "itemtype": "property",
            "name": "#osciladorA",
            "type": "oscillator",
            "access": "private",
            "tagname": "",
            "class": "Synth",
            "module": "Reverb"
        },
        {
            "file": "src\\controller\\synth.js",
            "line": 28,
            "description": "Instancia del osciladorB",
            "itemtype": "property",
            "name": "#osciladorB",
            "type": "oscillator",
            "access": "private",
            "tagname": "",
            "class": "Synth",
            "module": "Reverb"
        },
        {
            "file": "src\\controller\\synth.js",
            "line": 36,
            "description": "Contexto de audio para la aplicación de la Web Audio API",
            "itemtype": "property",
            "name": "audioCtx",
            "type": "BaseAudioContext",
            "access": "private",
            "tagname": "",
            "class": "Synth",
            "module": "Reverb"
        },
        {
            "file": "src\\controller\\synth.js",
            "line": 44,
            "description": "Nodo de ganancia para controlar el volumen general de la aplicación",
            "itemtype": "property",
            "name": "masterVolumeNode",
            "type": "AudioNode",
            "access": "private",
            "tagname": "",
            "class": "Synth",
            "module": "Reverb"
        },
        {
            "file": "src\\controller\\synth.js",
            "line": 52,
            "description": "Nodo de ganancia que representa a los osciladores sin aplicarle ningún efecto",
            "itemtype": "property",
            "name": "gainCleanNode",
            "type": "AudioNode",
            "access": "private",
            "tagname": "",
            "class": "Synth",
            "module": "Reverb"
        },
        {
            "file": "src\\controller\\synth.js",
            "line": 61,
            "description": "Efecto de reverb",
            "itemtype": "property",
            "name": "reverb",
            "type": "Reverb",
            "access": "private",
            "tagname": "",
            "class": "Synth",
            "module": "Reverb"
        },
        {
            "file": "src\\controller\\synth.js",
            "line": 69,
            "description": "Efecto de Delay",
            "itemtype": "property",
            "name": "delay",
            "type": "Delay",
            "access": "private",
            "tagname": "",
            "class": "Synth",
            "module": "Reverb"
        },
        {
            "file": "src\\controller\\synth.js",
            "line": 77,
            "description": "Efecto de Filtro",
            "itemtype": "property",
            "name": "filter",
            "type": "Filter",
            "access": "private",
            "tagname": "",
            "class": "Synth",
            "module": "Reverb"
        },
        {
            "file": "src\\controller\\synth.js",
            "line": 85,
            "description": "Efecto de distorsion",
            "itemtype": "property",
            "name": "distorsion",
            "type": "Distorsion",
            "access": "private",
            "tagname": "",
            "class": "Synth",
            "module": "Reverb"
        },
        {
            "file": "src\\controller\\synth.js",
            "line": 93,
            "description": "Objeto que se va a encargar de enviar peticiones \na BD para almacenar objetos",
            "itemtype": "property",
            "name": "saver",
            "type": "Saver",
            "access": "private",
            "tagname": "",
            "class": "Synth",
            "module": "Reverb"
        },
        {
            "file": "src\\controller\\synth.js",
            "line": 102,
            "description": "Objeto que se va a encargar de enviar peticiones \nGET a BD para obtener objetos",
            "itemtype": "property",
            "name": "loader",
            "type": "Loader",
            "access": "private",
            "tagname": "",
            "class": "Synth",
            "module": "Reverb"
        },
        {
            "file": "src\\controller\\synth.js",
            "line": 111,
            "description": "Objeto que se va a encargar de gestionar los eventos MIDI",
            "itemtype": "property",
            "name": "midi",
            "type": "Midi",
            "access": "private",
            "tagname": "",
            "class": "Synth",
            "module": "Reverb"
        },
        {
            "file": "src\\controller\\synth.js",
            "line": 119,
            "description": "Objeto que se va a encargar de gestionar la grabación de sonidos",
            "itemtype": "property",
            "name": "recorer",
            "type": "Recorder",
            "access": "private",
            "tagname": "",
            "class": "Synth",
            "module": "Reverb"
        },
        {
            "file": "src\\controller\\synth.js",
            "line": 127,
            "description": "Objeto que se va a encargar de analizar el espectro de frecuencias \nproducido",
            "itemtype": "property",
            "name": "analyser",
            "type": "Analyser",
            "access": "private",
            "tagname": "",
            "class": "Synth",
            "module": "Reverb"
        },
        {
            "file": "src\\controller\\synth.js",
            "line": 136,
            "description": "Objeto que se encarga de controlar el ecualizador",
            "itemtype": "property",
            "name": "eq",
            "type": "Equalizer",
            "access": "private",
            "tagname": "",
            "class": "Synth",
            "module": "Reverb"
        },
        {
            "file": "src\\controller\\synth.js",
            "line": 210,
            "description": "Método que se encarga de activar un efecto",
            "itemtype": "method",
            "name": "applyEffect",
            "params": [
                {
                    "name": "effect",
                    "description": "Efecto que se va a aplicar",
                    "type": "String"
                }
            ],
            "class": "Synth",
            "module": "Reverb"
        },
        {
            "file": "src\\controller\\synth.js",
            "line": 238,
            "description": "Método que se encarga de cominacar al saver que tiene que mandar una petición",
            "mehtod": "delete",
            "params": [
                {
                    "name": "id",
                    "description": "Id del sonido a eliminar",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Json con el resultado de la petición"
            },
            "class": "Synth",
            "module": "Reverb"
        },
        {
            "file": "src\\controller\\synth.js",
            "line": 248,
            "description": "Método que se encarga de desactivar un efecto",
            "itemtype": "method",
            "name": "disapplyEffect",
            "params": [
                {
                    "name": "effect",
                    "description": "Efecto que se va a desactivar",
                    "type": "String"
                }
            ],
            "class": "Synth",
            "module": "Reverb"
        },
        {
            "file": "src\\controller\\synth.js",
            "line": 275,
            "description": "Método que se encarga de enviar al ecualizador que banda\nhay que atenuar o incrementar",
            "itemtype": "method",
            "name": "equalize",
            "params": [
                {
                    "name": "freq",
                    "description": "Banda del ecualizador",
                    "type": "String"
                },
                {
                    "name": "value",
                    "description": "Decremento o incremento en db",
                    "type": "Float"
                }
            ],
            "class": "Synth",
            "module": "Reverb"
        },
        {
            "file": "src\\controller\\synth.js",
            "line": 287,
            "description": "Método que se encarga de comunicar al cargargador que se \nrequiere obtener información de la BD",
            "itemtype": "method",
            "name": "fetchThings",
            "async": 1,
            "params": [
                {
                    "name": "thing",
                    "description": "Información que se quiere obtener",
                    "type": "String"
                }
            ],
            "return": {
                "description": "JSON"
            },
            "class": "Synth",
            "module": "Reverb"
        },
        {
            "file": "src\\controller\\synth.js",
            "line": 312,
            "description": "Método que se encarga de redirigir  las peticiones del cliente\nen el perfil",
            "itemtype": "method",
            "name": "fetchProfile",
            "params": [
                {
                    "name": "action",
                    "description": "Acción que el usuario desea realizar",
                    "type": "String"
                },
                {
                    "name": "data",
                    "description": "Datos a mandar al servidor",
                    "type": "JSON"
                }
            ],
            "return": {
                "description": "Respuesta del servidor"
            },
            "class": "Synth",
            "module": "Reverb"
        },
        {
            "file": "src\\controller\\synth.js",
            "line": 337,
            "description": "Método que se encarga de llamar al módulo de carga para que\ncargue un sonido",
            "itemtype": "method",
            "name": "load",
            "async": 1,
            "params": [
                {
                    "name": "id",
                    "description": "Identificador del sonido",
                    "type": "String"
                }
            ],
            "class": "Synth",
            "module": "Reverb"
        },
        {
            "file": "src\\controller\\synth.js",
            "line": 353,
            "description": "Método que se encarga de encender un oscilador",
            "itemtype": "method",
            "name": "onOscillator",
            "params": [
                {
                    "name": "osc",
                    "description": "Id del oscildor",
                    "type": "Char"
                }
            ],
            "class": "Synth",
            "module": "Reverb"
        },
        {
            "file": "src\\controller\\synth.js",
            "line": 372,
            "description": "Método que se encarga de apagar un oscilador",
            "itemtype": "method",
            "name": "offOscillator",
            "params": [
                {
                    "name": "osc",
                    "description": "Id del oscildor",
                    "type": "Char"
                }
            ],
            "class": "Synth",
            "module": "Reverb"
        },
        {
            "file": "src\\controller\\synth.js",
            "line": 389,
            "description": "Método que se encarga de tocar una nota de los osciladores",
            "itemtype": "method",
            "name": "playNote",
            "params": [
                {
                    "name": "key",
                    "description": "Nota",
                    "type": "Char"
                }
            ],
            "class": "Synth",
            "module": "Reverb"
        },
        {
            "file": "src\\controller\\synth.js",
            "line": 402,
            "description": "Delega la petición de grabación al objeto encargado de ello",
            "itemtype": "method",
            "name": "rec",
            "params": [
                {
                    "name": "state",
                    "description": "Estado a salvar",
                    "type": "JSON"
                }
            ],
            "class": "Synth",
            "module": "Reverb"
        },
        {
            "file": "src\\controller\\synth.js",
            "line": 411,
            "description": "Método que se encarga de seleccionar el tipo de onda de los osciladores",
            "itemtype": "method",
            "name": "selectWave",
            "params": [
                {
                    "name": "osc",
                    "description": "Id del oscilador",
                    "type": "Char"
                },
                {
                    "name": "wave",
                    "description": "Forma de la onda",
                    "type": "String"
                }
            ],
            "class": "Synth",
            "module": "Reverb"
        },
        {
            "file": "src\\controller\\synth.js",
            "line": 433,
            "description": "Método que se encarga de llamar al saver para que mande el estado actual\ndel sintetizador a la base de datos para su almacenamiento",
            "itemtype": "method",
            "name": "save",
            "async": 1,
            "params": [
                {
                    "name": "data",
                    "description": "Metadatos del sonido",
                    "type": "JSON"
                }
            ],
            "class": "Synth",
            "module": "Reverb"
        },
        {
            "file": "src\\controller\\synth.js",
            "line": 446,
            "class": "Synth",
            "module": "Reverb"
        },
        {
            "file": "src\\controller\\synth.js",
            "line": 448,
            "description": "Getter de la disponibilidad de los osciladores",
            "itemtype": "method",
            "name": "getAvailable",
            "params": [
                {
                    "name": "osc",
                    "description": "Id del oscilador",
                    "type": "Char"
                }
            ],
            "return": {
                "description": "Boolean"
            },
            "class": "Synth",
            "module": "Reverb"
        },
        {
            "file": "src\\controller\\synth.js",
            "line": 465,
            "description": "Getter del flag de selección del oscilador",
            "itemtype": "method",
            "name": "getChecked",
            "params": [
                {
                    "name": "osc",
                    "description": "Id del oscilador",
                    "type": "Char"
                }
            ],
            "return": {
                "description": "Booleano"
            },
            "class": "Synth",
            "module": "Reverb"
        },
        {
            "file": "src\\controller\\synth.js",
            "line": 478,
            "description": "Método que devuelve el estado de todos los efectos",
            "itemtype": "method",
            "name": "getEffects",
            "return": {
                "description": "JSON"
            },
            "class": "Synth",
            "module": "Reverb"
        },
        {
            "file": "src\\controller\\synth.js",
            "line": 494,
            "description": "Getter del volumen de los osciladores",
            "itemtype": "method",
            "name": "getVolum",
            "params": [
                {
                    "name": "osc",
                    "description": "Id del oscilador",
                    "type": "Char"
                }
            ],
            "return": {
                "description": "Volumen"
            },
            "class": "Synth",
            "module": "Reverb"
        },
        {
            "file": "src\\controller\\synth.js",
            "line": 512,
            "description": "Getter de distintos parámetros del Analizador",
            "itemtype": "method",
            "name": "getThingsAnalyser",
            "params": [
                {
                    "name": "thing",
                    "description": "Parámetro que se quiere",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Parámetro"
            },
            "class": "Synth",
            "module": "Reverb"
        },
        {
            "file": "src\\controller\\synth.js",
            "line": 530,
            "class": "Synth",
            "module": "Reverb"
        },
        {
            "file": "src\\controller\\synth.js",
            "line": 531,
            "description": "Setter del flag checked que indica si el oscilador\nesta seleccionado",
            "itemtype": "method",
            "name": "setChecked",
            "params": [
                {
                    "name": "osc",
                    "description": "Id del oscilador",
                    "type": "Char"
                },
                {
                    "name": "val",
                    "description": "",
                    "type": "Boolean"
                }
            ],
            "class": "Synth",
            "module": "Reverb"
        },
        {
            "file": "src\\controller\\synth.js",
            "line": 544,
            "description": "Setter del jwt de autenticacion y del id del usario",
            "itemtype": "method",
            "name": "setCookies",
            "params": [
                {
                    "name": "token",
                    "description": "Token",
                    "type": "String"
                },
                {
                    "name": "user",
                    "description": "Id del usuario",
                    "type": "String"
                }
            ],
            "class": "Synth",
            "module": "Reverb"
        },
        {
            "file": "src\\controller\\synth.js",
            "line": 559,
            "description": "Setter de los parámetros del delay",
            "itemtype": "method",
            "name": "setDelay",
            "params": [
                {
                    "name": "param",
                    "description": "Parámetro a modificar",
                    "type": "Char"
                },
                {
                    "name": "val",
                    "description": "Valor a cambiar",
                    "type": "String"
                }
            ],
            "class": "Synth",
            "module": "Reverb"
        },
        {
            "file": "src\\controller\\synth.js",
            "line": 583,
            "description": "Setter de los parámetros del delay",
            "itemtype": "method",
            "name": "setDistorsion",
            "params": [
                {
                    "name": "param",
                    "description": "Parámetro a modificar",
                    "type": "Char"
                },
                {
                    "name": "val",
                    "description": "Valor a cambiar",
                    "type": "String"
                }
            ],
            "class": "Synth",
            "module": "Reverb"
        },
        {
            "file": "src\\controller\\synth.js",
            "line": 603,
            "description": "Setter de los parámetros de la envolvente de los osciladores",
            "itemtype": "method",
            "name": "setEnvolve",
            "params": [
                {
                    "name": "osc",
                    "description": "Id del oscilador",
                    "type": "Char"
                },
                {
                    "name": "val",
                    "description": "Valor a cambiar",
                    "type": "Float"
                },
                {
                    "name": "param",
                    "description": "Parámetro de la envolvente a cambiar",
                    "type": "String"
                }
            ],
            "class": "Synth",
            "module": "Reverb"
        },
        {
            "file": "src\\controller\\synth.js",
            "line": 656,
            "description": "Setter del volume general de la aplicación",
            "itemtype": "method",
            "name": "setFilter",
            "params": [
                {
                    "name": "param",
                    "description": "Parametro a modificar",
                    "type": "String"
                },
                {
                    "name": "val",
                    "description": "Valor del parametro a modificar",
                    "type": "String"
                }
            ],
            "class": "Synth",
            "module": "Reverb"
        },
        {
            "file": "src\\controller\\synth.js",
            "line": 680,
            "description": "Setter del volume general de la aplicación",
            "itemtype": "method",
            "name": "setMaster",
            "params": [
                {
                    "name": "val",
                    "description": "Valor de volumen en db",
                    "type": "Float"
                }
            ],
            "class": "Synth",
            "module": "Reverb"
        },
        {
            "file": "src\\controller\\synth.js",
            "line": 691,
            "description": "Setter de la octava del midi",
            "itemtype": "method",
            "name": "setOctave",
            "params": [
                {
                    "name": "oct",
                    "description": "Octava",
                    "type": "Integer"
                }
            ],
            "class": "Synth",
            "module": "Reverb"
        },
        {
            "file": "src\\controller\\synth.js",
            "line": 701,
            "description": "Setter del nivle de paneo de los osciladores",
            "itemtype": "method",
            "name": "setPan",
            "params": [
                {
                    "name": "osc",
                    "description": "id del oscilador",
                    "type": "Char"
                },
                {
                    "name": "value",
                    "description": "valor de paneo",
                    "type": "Float"
                }
            ],
            "class": "Synth",
            "module": "Reverb"
        },
        {
            "file": "src\\controller\\synth.js",
            "line": 716,
            "description": "Modificador del efecto reverb",
            "itemtype": "method",
            "name": "setReverbWet",
            "params": [
                {
                    "name": "val",
                    "description": "Nivel de Reverb que se quiere aplicar",
                    "type": "Float"
                }
            ],
            "class": "Synth",
            "module": "Reverb"
        },
        {
            "file": "src\\controller\\synth.js",
            "line": 743,
            "description": "Setter del volumen de los osciladores",
            "itemtype": "method",
            "name": "setVolum",
            "params": [
                {
                    "name": "osc",
                    "description": "Id del oscilador",
                    "type": "Char"
                }
            ],
            "class": "Synth",
            "module": "Reverb"
        },
        {
            "file": "src\\controller\\voice.js",
            "line": 14,
            "description": "Contexto de audio para la aplicación de la Web Audio API",
            "itemtype": "property",
            "name": "BaseAudioContext",
            "type": "Object",
            "access": "private",
            "tagname": "",
            "class": "Voice",
            "module": "synth"
        },
        {
            "file": "src\\controller\\voice.js",
            "line": 21,
            "description": "Tipo de onda del oscilador",
            "itemtype": "property",
            "name": "type",
            "type": "String",
            "access": "private",
            "tagname": "",
            "class": "Voice",
            "module": "synth"
        },
        {
            "file": "src\\controller\\voice.js",
            "line": 28,
            "description": "Guarda los valores de la envolvente",
            "itemtype": "property",
            "name": "envelope",
            "type": "object",
            "access": "private",
            "tagname": "",
            "class": "Voice",
            "module": "synth"
        },
        {
            "file": "src\\controller\\voice.js",
            "line": 35,
            "description": "Nodo de ganancia del oscilador",
            "itemtype": "property",
            "name": "masterNode",
            "type": "AudioNode",
            "access": "private",
            "tagname": "",
            "class": "Voice",
            "module": "synth"
        },
        {
            "file": "src\\controller\\voice.js",
            "line": 42,
            "description": "Contiene las ganacias particulares de cada voz",
            "itemtype": "property",
            "name": "gains",
            "type": "object",
            "access": "private",
            "tagname": "",
            "class": "Voice",
            "module": "synth"
        },
        {
            "file": "src\\controller\\voice.js",
            "line": 49,
            "description": "Contiene las voces correspondientes a cada nota",
            "itemtype": "property",
            "name": "voices",
            "type": "object",
            "access": "private",
            "tagname": "",
            "class": "Voice",
            "module": "synth"
        },
        {
            "file": "src\\controller\\voice.js",
            "line": 56,
            "description": "Contiene las voces que se estan reproduciendo",
            "itemtype": "property",
            "name": "activeVoices",
            "type": "object",
            "access": "private",
            "tagname": "",
            "class": "Voice",
            "module": "synth"
        },
        {
            "file": "src\\controller\\voice.js",
            "line": 63,
            "description": "Contiene las notas con sus frecuencias",
            "itemtype": "property",
            "name": "notes",
            "type": "object",
            "access": "private",
            "tagname": "",
            "class": "Voice",
            "module": "synth"
        },
        {
            "file": "src\\controller\\voice.js",
            "line": 101,
            "description": "Método que se encarga de crear una voz para cada una de las notas, es decir,\npara cada nota se crea un oscilador y lo conecta con un nodo de ganancia para\nlograr la polifonia",
            "itemtype": "method",
            "name": "createVocies",
            "class": "Voice",
            "module": "synth"
        },
        {
            "file": "src\\controller\\voice.js",
            "line": 133,
            "description": "Método que es llamado cuando se toca una nota. Almacena que voz se ha tocado\ny llama al metodo de la envolvente",
            "itemtype": "method",
            "name": "start",
            "params": [
                {
                    "name": "key",
                    "description": "Nota tocada",
                    "type": "String"
                },
                {
                    "name": "gain",
                    "description": "Volumen del oscilador",
                    "type": "Float"
                }
            ],
            "class": "Voice",
            "module": "synth"
        },
        {
            "file": "src\\controller\\voice.js",
            "line": 148,
            "description": "Getter de los parámetros de la envolvente",
            "itemtype": "method",
            "name": "getEnvolve",
            "return": {
                "description": "JSON"
            },
            "class": "Voice",
            "module": "synth"
        },
        {
            "file": "src\\controller\\voice.js",
            "line": 159,
            "description": "Getter del tipo de onda de los oscilladores de las voces",
            "return": {
                "description": "String"
            },
            "class": "Voice",
            "module": "synth"
        },
        {
            "file": "src\\controller\\voice.js",
            "line": 168,
            "description": "Setter del volumen",
            "itemtype": "method",
            "name": "setGain",
            "params": [
                {
                    "name": "key",
                    "description": "Nota tocada",
                    "type": "String"
                },
                {
                    "name": "gain",
                    "description": "Volumen del oscilador",
                    "type": "Float"
                }
            ],
            "class": "Voice",
            "module": "synth"
        },
        {
            "file": "src\\controller\\voice.js",
            "line": 181,
            "description": "Setter del Attack",
            "itemtype": "method",
            "name": "setAttack",
            "params": [
                {
                    "name": "val",
                    "description": "Valor",
                    "type": "Float"
                }
            ],
            "class": "Voice",
            "module": "synth"
        },
        {
            "file": "src\\controller\\voice.js",
            "line": 191,
            "description": "Setter del Release",
            "itemtype": "method",
            "name": "setRelease",
            "params": [
                {
                    "name": "val",
                    "description": "Valor",
                    "type": "Float"
                }
            ],
            "class": "Voice",
            "module": "synth"
        },
        {
            "file": "src\\controller\\voice.js",
            "line": 201,
            "description": "Setter del Sustain",
            "itemtype": "method",
            "name": "setSustain",
            "params": [
                {
                    "name": "val",
                    "description": "Valor",
                    "type": "Float"
                }
            ],
            "class": "Voice",
            "module": "synth"
        },
        {
            "file": "src\\controller\\voice.js",
            "line": 211,
            "description": "Setter del Decay",
            "itemtype": "method",
            "name": "setDecay",
            "params": [
                {
                    "name": "val",
                    "description": "Valor",
                    "type": "Float"
                }
            ],
            "class": "Voice",
            "module": "synth"
        },
        {
            "file": "src\\controller\\voice.js",
            "line": 220,
            "description": "Setter del tipo de onda para cada una de las voces",
            "itemtype": "method",
            "name": "setType",
            "params": [
                {
                    "name": "type",
                    "description": "Tipo de onda",
                    "type": "String"
                }
            ],
            "class": "Voice",
            "module": "synth"
        },
        {
            "file": "src\\controller\\voice.js",
            "line": 233,
            "description": "Método que simula el comportamiento de una envolvente sobre una \nseñal de audio y que es llamado cada vez que se presiona una nota",
            "itemtype": "method",
            "name": "envelopeGeneratorOn",
            "params": [
                {
                    "name": "key",
                    "description": "Nota presionada",
                    "type": "String"
                },
                {
                    "name": "gain",
                    "description": "Volumen actual del oscilador",
                    "type": "Float"
                }
            ],
            "class": "Voice",
            "module": "synth"
        },
        {
            "file": "src\\view\\elements\\effects\\delay.js",
            "line": 28,
            "description": "Método que se encarga de seleccionar el tiempo de delay",
            "itemtype": "method",
            "name": "selectTime",
            "class": "Delay",
            "module": "synth"
        },
        {
            "file": "src\\view\\elements\\effects\\delay.js",
            "line": 38,
            "description": "Convierte el valor númerico del tiempo a su correspondiente\nfracción",
            "itemtype": "method",
            "name": "checkTime",
            "params": [
                {
                    "name": "time",
                    "description": "Valor de tiempo de delay",
                    "type": "Float"
                }
            ],
            "class": "Delay",
            "module": "synth"
        },
        {
            "file": "src\\view\\elements\\effects\\delay.js",
            "line": 75,
            "description": "Setter del tiempo de delay",
            "itemtype": "method",
            "name": "setTime",
            "params": [
                {
                    "name": "time",
                    "description": "Fracción de tiempo",
                    "type": "String"
                }
            ],
            "class": "Delay",
            "module": "synth"
        },
        {
            "file": "src\\view\\elements\\effects\\delay.js",
            "line": 86,
            "description": "Setter de todos los parámetros del delay",
            "itemtype": "method",
            "name": "setDelay",
            "params": [
                {
                    "name": "delay",
                    "description": "Valores de los parámetros del efecto delay",
                    "type": "JSON"
                }
            ],
            "class": "Delay",
            "module": "synth"
        },
        {
            "file": "src\\view\\elements\\effects\\delay.js",
            "line": 108,
            "description": "Método que devuelve el componente Delay para ser renderizado",
            "itemtype": "method",
            "name": "render",
            "return": {
                "description": "Código html del componente Delay"
            },
            "class": "Delay",
            "module": "synth"
        },
        {
            "file": "src\\view\\elements\\effects\\distorsion.js",
            "line": 23,
            "description": "Setter de todos los parámetros del efecto distorsión",
            "itemtype": "method",
            "name": "setDistorsion",
            "params": [
                {
                    "name": "d",
                    "description": "Valores de los parámetros del efecto distorsión",
                    "type": "Object"
                }
            ],
            "class": "Distorsion",
            "module": "synth"
        },
        {
            "file": "src\\view\\elements\\effects\\distorsion.js",
            "line": 39,
            "description": "Método que devuelve el componente Distorsion para ser renderizado",
            "itemtype": "method",
            "name": "render",
            "return": {
                "description": "Código html del componente Distorsion"
            },
            "class": "Distorsion",
            "module": "synth"
        },
        {
            "file": "src\\view\\elements\\effects\\effect.js",
            "line": 14,
            "description": "Instancia de la clase fachada del controlador",
            "itemtype": "property",
            "name": "synth",
            "type": "Synth",
            "access": "protected",
            "tagname": "",
            "class": "Effect",
            "module": "synth"
        },
        {
            "file": "src\\view\\elements\\effects\\effect.js",
            "line": 22,
            "description": "Tipo de efecto",
            "itemtype": "property",
            "name": "type",
            "type": "String",
            "access": "private",
            "tagname": "",
            "class": "Effect",
            "module": "synth"
        },
        {
            "file": "src\\view\\elements\\effects\\effect.js",
            "line": 37,
            "description": "Método que se encarga de mandar la orden al controlador\npara aplicar o desaplicar el efecto",
            "itemtype": "method",
            "name": "checkEffect",
            "class": "Effect",
            "module": "synth"
        },
        {
            "file": "src\\view\\elements\\effects\\effect.js",
            "line": 53,
            "description": "Método que se encarga de mandar la orden de aplicar o \ndesaplicar el efecto cuando se carga un sonido desde BD",
            "itemtype": "method",
            "name": "apply",
            "params": [
                {
                    "name": "b",
                    "description": "",
                    "type": "Boolean"
                }
            ],
            "class": "Effect",
            "module": "synth"
        },
        {
            "file": "src\\view\\elements\\effects\\effect.js",
            "line": 76,
            "description": "Método que devuelve un interruptor para aplicar o \ndesaplicar un efecto",
            "itemtype": "method",
            "name": "render",
            "return": {
                "description": "Código html del interruptor"
            },
            "class": "Effect",
            "module": "synth"
        },
        {
            "file": "src\\view\\elements\\effects\\filter.js",
            "line": 21,
            "description": "Referencia al knob del filtro hp",
            "itemtype": "property",
            "name": "hpRef",
            "type": "Ref",
            "class": "Filter",
            "module": "synth"
        },
        {
            "file": "src\\view\\elements\\effects\\filter.js",
            "line": 27,
            "description": "Referencia al knob del filtro lp",
            "itemtype": "property",
            "name": "lpRef",
            "type": "Ref",
            "class": "Filter",
            "module": "synth"
        },
        {
            "file": "src\\view\\elements\\effects\\filter.js",
            "line": 33,
            "description": "Referencia al knob del filtro hs",
            "itemtype": "property",
            "name": "hsRef",
            "type": "Ref",
            "class": "Filter",
            "module": "synth"
        },
        {
            "file": "src\\view\\elements\\effects\\filter.js",
            "line": 39,
            "description": "Referencia al knob del filtro bp",
            "itemtype": "property",
            "name": "bpRef",
            "type": "Ref",
            "class": "Filter",
            "module": "synth"
        },
        {
            "file": "src\\view\\elements\\effects\\filter.js",
            "line": 45,
            "description": "Referencia al knob del filtro ls",
            "itemtype": "property",
            "name": "lsRef",
            "type": "Ref",
            "class": "Filter",
            "module": "synth"
        },
        {
            "file": "src\\view\\elements\\effects\\filter.js",
            "line": 51,
            "description": "Referencia al knob del filtro pi",
            "itemtype": "property",
            "name": "piRef",
            "type": "Ref",
            "class": "Filter",
            "module": "synth"
        },
        {
            "file": "src\\view\\elements\\effects\\filter.js",
            "line": 58,
            "description": "Referencia al knob del filtro nt",
            "itemtype": "property",
            "name": "ntRef",
            "type": "Ref",
            "class": "Filter",
            "module": "synth"
        },
        {
            "file": "src\\view\\elements\\effects\\filter.js",
            "line": 64,
            "description": "Referencia al knob de wet",
            "itemtype": "property",
            "name": "wetRef",
            "type": "Ref",
            "class": "Filter",
            "module": "synth"
        },
        {
            "file": "src\\view\\elements\\effects\\filter.js",
            "line": 93,
            "description": "Método para selecionar el tipo de filtro",
            "itemtype": "method",
            "name": "selecType",
            "class": "Filter",
            "module": "synth"
        },
        {
            "file": "src\\view\\elements\\effects\\filter.js",
            "line": 113,
            "description": "Setter del knob de frecuencia del filtro",
            "itemtype": "method",
            "name": "setFrequencies",
            "params": [
                {
                    "name": "type",
                    "description": "Tipo de filtro",
                    "type": "String"
                },
                {
                    "name": "freq",
                    "description": "Frecuencia de inicio de actuación del filtro",
                    "type": "Float"
                }
            ],
            "class": "Filter",
            "module": "synth"
        },
        {
            "file": "src\\view\\elements\\effects\\filter.js",
            "line": 146,
            "description": "Setter del efecto filtro",
            "itemtype": "method",
            "name": "setFilter",
            "params": [
                {
                    "name": "f",
                    "description": "Parámetros del efecto Filtro",
                    "type": "JSON"
                }
            ],
            "class": "Filter",
            "module": "synth"
        },
        {
            "file": "src\\view\\elements\\effects\\filter.js",
            "line": 167,
            "description": "Método que devuelve el componente Filter para ser renderizado",
            "itemtype": "method",
            "name": "render",
            "return": {
                "description": "Código html del componente Filter"
            },
            "class": "Filter",
            "module": "synth"
        },
        {
            "file": "src\\view\\elements\\effects\\reverb.js",
            "line": 18,
            "description": "Referencia al knob del filtro hp",
            "itemtype": "property",
            "name": "hpRef",
            "type": "Ref",
            "class": "Reverb",
            "module": "filterTypes"
        },
        {
            "file": "src\\view\\elements\\effects\\reverb.js",
            "line": 24,
            "description": "Referencia al knob del filtro lp",
            "itemtype": "property",
            "name": "lpRef",
            "type": "Ref",
            "class": "Reverb",
            "module": "filterTypes"
        },
        {
            "file": "src\\view\\elements\\effects\\reverb.js",
            "line": 30,
            "description": "Referencia al knob de wet",
            "itemtype": "property",
            "name": "wetRef",
            "type": "Ref",
            "class": "Reverb",
            "module": "filterTypes"
        },
        {
            "file": "src\\view\\elements\\effects\\reverb.js",
            "line": 36,
            "description": "Referencia al knob de decay",
            "itemtype": "property",
            "name": "dcRef",
            "type": "Ref",
            "class": "Reverb",
            "module": "filterTypes"
        },
        {
            "file": "src\\view\\elements\\effects\\reverb.js",
            "line": 52,
            "description": "Setter de todos los parámetros del efecto distorsión",
            "itemtype": "method",
            "name": "setDistorsion",
            "params": [
                {
                    "name": "r",
                    "description": "Valores de los parámetros del efecto re",
                    "type": "JSON"
                }
            ],
            "class": "Reverb",
            "module": "filterTypes"
        },
        {
            "file": "src\\view\\elements\\effects\\reverb.js",
            "line": 75,
            "description": "Método que devuelve el componente Reverb para ser renderizado",
            "itemtype": "method",
            "name": "render",
            "return": {
                "description": "Código html del componente Reverb"
            },
            "class": "Reverb",
            "module": "filterTypes"
        },
        {
            "file": "src\\view\\elements\\modals\\modal-delete.js",
            "line": 15,
            "itemtype": "property",
            "name": "id",
            "type": "string",
            "class": "ModalDelete",
            "module": "filterTypes"
        },
        {
            "file": "src\\view\\elements\\modals\\modal-delete.js",
            "line": 25,
            "description": "Se encarga de comunicar a la fachada que el usuario quiere eliminar un sonido. \nCuando reciba una respuesta, la interpretará",
            "itemtype": "method",
            "name": "delete",
            "async": 1,
            "class": "ModalDelete",
            "module": "filterTypes"
        },
        {
            "file": "src\\view\\elements\\modals\\modal-delete.js",
            "line": 55,
            "description": "Se encarga de mostrar el modal",
            "itemtype": "method",
            "name": "show",
            "params": [
                {
                    "name": "id",
                    "description": "Identidicador del modal",
                    "type": "String"
                }
            ],
            "class": "ModalDelete",
            "module": "filterTypes"
        },
        {
            "file": "src\\view\\elements\\modals\\modal-delete.js",
            "line": 69,
            "description": "Método que devuelve el componente ModalDelte para ser renderizado",
            "itemtype": "method",
            "name": "render",
            "return": {
                "description": "Código html del componente Distorsion"
            },
            "class": "ModalDelete",
            "module": "filterTypes"
        },
        {
            "file": "src\\view\\elements\\modals\\modal-load.js",
            "line": 15,
            "itemtype": "property",
            "name": "id",
            "type": "string",
            "class": "ModalLoad",
            "module": "filterTypes"
        },
        {
            "file": "src\\view\\elements\\modals\\modal-load.js",
            "line": 25,
            "description": "Se encarga de comunicar a la fachada que el usuario quiere cargar un sonido. \nCuando reciba una respuesta, la interpretará",
            "itemtype": "method",
            "name": "delete",
            "async": 1,
            "class": "ModalLoad",
            "module": "filterTypes"
        },
        {
            "file": "src\\view\\elements\\modals\\modal-load.js",
            "line": 51,
            "description": "Se encarga de mostrar el modal",
            "itemtype": "method",
            "name": "show",
            "params": [
                {
                    "name": "id",
                    "description": "Identidicador del modal",
                    "type": "String"
                }
            ],
            "class": "ModalLoad",
            "module": "filterTypes"
        },
        {
            "file": "src\\view\\elements\\modals\\modal-load.js",
            "line": 64,
            "description": "Método que devuelve el componente ModalLoad para ser renderizado",
            "itemtype": "method",
            "name": "render",
            "return": {
                "description": "Código html del componente Distorsion"
            },
            "class": "ModalLoad",
            "module": "filterTypes"
        },
        {
            "file": "src\\view\\elements\\modals\\modal-password.js",
            "line": 19,
            "description": "Se encarga de comunicar a la fachada que el usuario quiere modificar su contraseña. \nCuando reciba una respuesta, la interpretará",
            "itemtype": "method",
            "name": "delete",
            "async": 1,
            "class": "ModalPassword",
            "module": "filterTypes"
        },
        {
            "file": "src\\view\\elements\\modals\\modal-password.js",
            "line": 61,
            "description": "Método que devuelve el componente ModalPassword para ser renderizado",
            "itemtype": "method",
            "name": "render",
            "return": {
                "description": "Código html del componente Distorsion"
            },
            "class": "ModalPassword",
            "module": "filterTypes"
        },
        {
            "file": "src\\view\\elements\\modals\\modal-save.js",
            "line": 21,
            "description": "Método que devuelve el componente ModalSave para ser renderizado",
            "itemtype": "method",
            "name": "render",
            "return": {
                "description": "Código html del componente Distorsion"
            },
            "class": "ModalSave",
            "module": "filterTypes"
        },
        {
            "file": "src\\view\\elements\\modals\\modal.js",
            "line": 29,
            "description": "Método que se ejecuta antes de que el componente se renderice. Se encarga\nde pedir las categorías y setearlas.",
            "itemtype": "method",
            "name": "componentDidMount",
            "class": "Modal",
            "module": "filterTypes"
        },
        {
            "file": "src\\view\\elements\\modals\\modal.js",
            "line": 40,
            "description": "Setter de la valoración",
            "itemtype": "method",
            "name": "setRating",
            "params": [
                {
                    "name": "data",
                    "description": "Valoración",
                    "type": "Float"
                }
            ],
            "class": "Modal",
            "module": "filterTypes"
        },
        {
            "file": "src\\view\\elements\\modals\\modal.js",
            "line": 51,
            "description": "Compureba que osciladores están encendidos",
            "methos": "checkOscillators",
            "access": "private",
            "tagname": "",
            "class": "Modal",
            "module": "filterTypes"
        },
        {
            "file": "src\\view\\elements\\modals\\modal.js",
            "line": 68,
            "description": "Se encarga de ocultar los modales",
            "itemtype": "method",
            "name": "hideModal",
            "class": "Modal",
            "module": "filterTypes"
        },
        {
            "file": "src\\view\\elements\\modals\\modal.js",
            "line": 111,
            "description": "Se encarga de limpiar las contraseñas",
            "itemtype": "method",
            "name": "cleanPasswords",
            "access": "private",
            "tagname": "",
            "class": "Modal",
            "module": "filterTypes"
        },
        {
            "file": "src\\view\\elements\\modals\\modal.js",
            "line": 127,
            "description": "Se encarga de enseñar el loader",
            "itemtype": "method",
            "name": "showLoader",
            "access": "private",
            "tagname": "",
            "class": "Modal",
            "module": "filterTypes"
        },
        {
            "file": "src\\view\\elements\\modals\\modal.js",
            "line": 152,
            "description": "Interpreta la respuestas de fachada y las maneja",
            "itemtype": "method",
            "name": "handleResponse",
            "params": [
                {
                    "name": "resp",
                    "description": "",
                    "type": "Object"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Modal",
            "module": "filterTypes"
        },
        {
            "file": "src\\view\\elements\\modals\\modal.js",
            "line": 211,
            "description": "Envía a la fachada un mensaje para guargar un sonido",
            "itemtype": "method",
            "name": "saveInBD",
            "params": [
                {
                    "name": "data",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Respuesta del servidor",
                "type": "String"
            },
            "access": "private",
            "tagname": "",
            "class": "Modal",
            "module": "filterTypes"
        },
        {
            "file": "src\\view\\elements\\modals\\modal.js",
            "line": 223,
            "description": "Inicia el proceso de guardado de un sonido y maneja la respuesta.",
            "itemtype": "method",
            "name": "save",
            "class": "Modal",
            "module": "filterTypes"
        },
        {
            "file": "src\\view\\elements\\envelope.js",
            "line": 17,
            "description": "Id del oscilador que posee la envolvente",
            "itemtype": "property",
            "name": "#osc",
            "type": "Char",
            "access": "private",
            "tagname": "",
            "class": "Envelope",
            "module": "filterTypes"
        },
        {
            "file": "src\\view\\elements\\envelope.js",
            "line": 40,
            "description": "Método que establece nuevos valores para los parámetros de \nla envolvente",
            "itemtype": "method",
            "name": "setEnvelope",
            "params": [
                {
                    "name": "envelope",
                    "description": "",
                    "type": "JSON"
                }
            ],
            "class": "Envelope",
            "module": "filterTypes"
        },
        {
            "file": "src\\view\\elements\\envelope.js",
            "line": 68,
            "description": "Método que devuelve el componente Envelope para ser renderizado",
            "itemtype": "method",
            "name": "render",
            "return": {
                "description": "Código html del componente Envelope"
            },
            "class": "Envelope",
            "module": "filterTypes"
        },
        {
            "file": "src\\view\\elements\\limitedKnob.js",
            "line": 21,
            "description": "Tipo de knob",
            "itemtype": "property",
            "name": "type",
            "type": "Object",
            "access": "private",
            "tagname": "",
            "class": "LimitedKnob",
            "module": "types"
        },
        {
            "file": "src\\view\\elements\\limitedKnob.js",
            "line": 28,
            "description": "Tipo de skin del knob",
            "itemtype": "property",
            "name": "skin",
            "type": "Object",
            "access": "private",
            "tagname": "",
            "class": "LimitedKnob",
            "module": "types"
        },
        {
            "file": "src\\view\\elements\\limitedKnob.js",
            "line": 35,
            "description": "Valor actual del knob",
            "itemtype": "property",
            "name": "value",
            "type": "Float",
            "access": "private",
            "tagname": "",
            "class": "LimitedKnob",
            "module": "types"
        },
        {
            "file": "src\\view\\elements\\limitedKnob.js",
            "line": 42,
            "description": "Estado del Knob",
            "itemtype": "property",
            "name": "state",
            "type": "Object",
            "class": "LimitedKnob",
            "module": "types"
        },
        {
            "file": "src\\view\\elements\\limitedKnob.js",
            "line": 50,
            "description": "Id del oscilador que contiene el Knob",
            "itemtype": "property",
            "name": "osc",
            "type": "char",
            "class": "LimitedKnob",
            "module": "types"
        },
        {
            "file": "src\\view\\elements\\limitedKnob.js",
            "line": 93,
            "description": "Método que se encarga de llamar al controlador para que \nmodifque el volumen general del oscilador",
            "itemtype": "method",
            "name": "handleOnChangeOscillator",
            "params": [
                {
                    "name": "val",
                    "description": "Valor del Knob",
                    "type": "Float"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "LimitedKnob",
            "module": "types"
        },
        {
            "file": "src\\view\\elements\\limitedKnob.js",
            "line": 109,
            "description": "Método que se encarga de llamar al controlador para que \nmodifque el Attack del oscilador",
            "itemtype": "method",
            "name": "handleOnChangeAttack",
            "params": [
                {
                    "name": "val",
                    "description": "Valor del Knob",
                    "type": "Float"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "LimitedKnob",
            "module": "types"
        },
        {
            "file": "src\\view\\elements\\limitedKnob.js",
            "line": 122,
            "description": "Método que se encarga de llamar al controlador para que \nmodifque el Decay del oscilador",
            "itemtype": "method",
            "name": "handleOnChangeDecay",
            "params": [
                {
                    "name": "val",
                    "description": "Valor del Knob",
                    "type": "Float"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "LimitedKnob",
            "module": "types"
        },
        {
            "file": "src\\view\\elements\\limitedKnob.js",
            "line": 136,
            "description": "Método que se encarga de llamar al controlador para que \nmodifque la cantidad de feedback del efecto delay",
            "itemtype": "method",
            "name": "handleOnChangeDelayFeedback",
            "params": [
                {
                    "name": "val",
                    "description": "Valor del Knob",
                    "type": "Float"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "LimitedKnob",
            "module": "types"
        },
        {
            "file": "src\\view\\elements\\limitedKnob.js",
            "line": 149,
            "description": "Método que se encarga de llamar al controlador para que \nmodifque la cantidad de efecto delay que se aplica",
            "itemtype": "method",
            "name": "handleOnChangeDelayWet",
            "params": [
                {
                    "name": "val",
                    "description": "Valor del Knob",
                    "type": "Float"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "LimitedKnob",
            "module": "types"
        },
        {
            "file": "src\\view\\elements\\limitedKnob.js",
            "line": 162,
            "description": "Método que se encarga de llamar al controlador para que \nmodifque la cantidad de efecto distorsion que se aplica",
            "itemtype": "method",
            "name": "handleOnChangeDistorsionwet",
            "params": [
                {
                    "name": "val",
                    "description": "Valor del Knob",
                    "type": "Float"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "LimitedKnob",
            "module": "types"
        },
        {
            "file": "src\\view\\elements\\limitedKnob.js",
            "line": 176,
            "description": "Método que se encarga de llamar al controlador para que \nmodifque el nivel de distorsion producido",
            "itemtype": "method",
            "name": "handleOnChangeDistorsionAmount",
            "params": [
                {
                    "name": "val",
                    "description": "Valor del Knob",
                    "type": "Float"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "LimitedKnob",
            "module": "types"
        },
        {
            "file": "src\\view\\elements\\limitedKnob.js",
            "line": 189,
            "description": "Método que se encarga de llamar al controlador para que \nmodifque la cantidad de filtro  que se aplica",
            "itemtype": "method",
            "name": "handleOnChangeFilterWet",
            "params": [
                {
                    "name": "val",
                    "description": "Valor del Knob",
                    "type": "Float"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "LimitedKnob",
            "module": "types"
        },
        {
            "file": "src\\view\\elements\\limitedKnob.js",
            "line": 203,
            "description": "Método que se encarga de llamar al controlador para que \nmodifque la frecuencia desde donde el  filtro se aplica",
            "itemtype": "method",
            "name": "__handleOnChangeFilterControl",
            "params": [
                {
                    "name": "val",
                    "description": "Valor del Knob",
                    "type": "Float"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "LimitedKnob",
            "module": "types"
        },
        {
            "file": "src\\view\\elements\\limitedKnob.js",
            "line": 217,
            "description": "Método que se encarga de llamar al controlador para que \nmodifque el volumen Master de la aplicacion",
            "itemtype": "method",
            "name": "handleOnChangeMaster",
            "params": [
                {
                    "name": "val",
                    "description": "Valor del Knob",
                    "type": "Float"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "LimitedKnob",
            "module": "types"
        },
        {
            "file": "src\\view\\elements\\limitedKnob.js",
            "line": 231,
            "description": "Método que se encarga de llamar al controlador para que \nmodifque el Sustain del oscilador",
            "itemtype": "method",
            "name": "handleOnChangeSustain",
            "params": [
                {
                    "name": "val",
                    "description": "Valor del Knob",
                    "type": "Float"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "LimitedKnob",
            "module": "types"
        },
        {
            "file": "src\\view\\elements\\limitedKnob.js",
            "line": 244,
            "description": "Método que se encarga de llamar al controlador para que \nmodifque el Release del oscilador",
            "itemtype": "method",
            "name": "handleOnChangeRelease",
            "params": [
                {
                    "name": "val",
                    "description": "Valor del Knob",
                    "type": "Float"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "LimitedKnob",
            "module": "types"
        },
        {
            "file": "src\\view\\elements\\limitedKnob.js",
            "line": 258,
            "description": "Método que se encarga de llamar al controlador para que \nmodifque el nivel de Decay del Reverb aplicado",
            "itemtype": "method",
            "name": "handelOnChangeReverbDecay",
            "params": [
                {
                    "name": "val",
                    "description": "Valor del Knob",
                    "type": "Float"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "LimitedKnob",
            "module": "types"
        },
        {
            "file": "src\\view\\elements\\limitedKnob.js",
            "line": 271,
            "description": "Método que se encarga de llamar al controlador para que \nmodifque el filtro pasa alto del Reverb aplicado",
            "itemtype": "method",
            "name": "handelOnChangeReverbHP",
            "params": [
                {
                    "name": "val",
                    "description": "Valor del Knob",
                    "type": "Float"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "LimitedKnob",
            "module": "types"
        },
        {
            "file": "src\\view\\elements\\limitedKnob.js",
            "line": 284,
            "description": "Método que se encarga de llamar al controlador para que \nmodifque el filtro pasa bajos del Reverb aplicado",
            "itemtype": "method",
            "name": "handelOnChangeReverbLP",
            "params": [
                {
                    "name": "val",
                    "description": "Valor del Knob",
                    "type": "Float"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "LimitedKnob",
            "module": "types"
        },
        {
            "file": "src\\view\\elements\\limitedKnob.js",
            "line": 297,
            "description": "Método que se encarga de llamar al controlador para que \nmodifque el nivel de Reverb aplicado",
            "itemtype": "method",
            "name": "handleOnChangeReverbWet",
            "params": [
                {
                    "name": "val",
                    "description": "Valor del Knob",
                    "type": "Float"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "LimitedKnob",
            "module": "types"
        },
        {
            "file": "src\\view\\elements\\limitedKnob.js",
            "line": 313,
            "description": "Método que es llamado cada vez que un Knob es alterado y que redirige la llamada\nal método adecuado para modificar el parámetro que esta modificando el usuario al \nmover el Knob",
            "itemtype": "method",
            "name": "handleOnChange",
            "params": [
                {
                    "name": "val",
                    "description": "Valor del Knob",
                    "type": "Float"
                }
            ],
            "class": "LimitedKnob",
            "module": "types"
        },
        {
            "file": "src\\view\\elements\\limitedKnob.js",
            "line": 400,
            "description": "Getter del estado del Knob",
            "itemtype": "method",
            "name": "getState",
            "return": {
                "description": "Estado del Knob"
            },
            "class": "LimitedKnob",
            "module": "types"
        },
        {
            "file": "src\\view\\elements\\limitedKnob.js",
            "line": 411,
            "description": "Setter del estado del knob de ganancia",
            "itemtype": "method",
            "name": "setGainOsc",
            "params": [
                {
                    "name": "val",
                    "description": "Nuevo valor de ganancia",
                    "type": "Float"
                }
            ],
            "class": "LimitedKnob",
            "module": "types"
        },
        {
            "file": "src\\view\\elements\\limitedKnob.js",
            "line": 422,
            "description": "Setter de los knobs de la envolvente",
            "itemtype": "method",
            "name": "setEnvelope",
            "params": [
                {
                    "name": "param",
                    "description": "Parametro a cambiar",
                    "type": "String"
                },
                {
                    "name": "val",
                    "description": "Nuevo valor",
                    "type": "Float"
                }
            ],
            "class": "LimitedKnob",
            "module": "types"
        },
        {
            "file": "src\\view\\elements\\limitedKnob.js",
            "line": 449,
            "description": "Setter del valor del knob wet para un efecto",
            "itemtype": "method",
            "name": "setWet",
            "params": [
                {
                    "name": "effect",
                    "description": "Efecto al que se va a modificar el wet",
                    "type": "String"
                },
                {
                    "name": "val",
                    "description": "Valor nuevo",
                    "type": "Float"
                }
            ],
            "class": "LimitedKnob",
            "module": "types"
        },
        {
            "file": "src\\view\\elements\\limitedKnob.js",
            "line": 475,
            "description": "Setter del knob amount del efecto distorsion",
            "itemtype": "method",
            "name": "setAmountDistorsion",
            "params": [
                {
                    "name": "val",
                    "description": "Valor nuevo",
                    "type": "Float"
                }
            ],
            "class": "LimitedKnob",
            "module": "types"
        },
        {
            "file": "src\\view\\elements\\limitedKnob.js",
            "line": 484,
            "description": "Setter del knob decay del efecto reverb",
            "itemtype": "method",
            "name": "setReverbDecay",
            "params": [
                {
                    "name": "val",
                    "description": "Valor nuevo",
                    "type": "Float"
                }
            ],
            "class": "LimitedKnob",
            "module": "types"
        },
        {
            "file": "src\\view\\elements\\limitedKnob.js",
            "line": 493,
            "description": "Setter del knob feedback del efecto delay",
            "itemtype": "method",
            "name": "setFeedback",
            "params": [
                {
                    "name": "val",
                    "description": "Valor nuevo",
                    "type": "Float"
                }
            ],
            "class": "LimitedKnob",
            "module": "types"
        },
        {
            "file": "src\\view\\elements\\limitedKnob.js",
            "line": 502,
            "description": "Setter del knob de frecuencia del efecto filtro",
            "itemtype": "method",
            "name": "setFeedback",
            "params": [
                {
                    "name": "val",
                    "description": "Valor nuevo",
                    "type": "Float"
                }
            ],
            "class": "LimitedKnob",
            "module": "types"
        },
        {
            "file": "src\\view\\elements\\limitedKnob.js",
            "line": 511,
            "description": "Método que devuelve el componente Knob para ser renderizado",
            "itemtype": "method",
            "name": "render",
            "return": {
                "description": "Código html del componente Knob"
            },
            "class": "LimitedKnob",
            "module": "types"
        },
        {
            "file": "src\\view\\elements\\rating.js",
            "line": 27,
            "description": "Representa el componente para el rating",
            "itemtype": "method",
            "name": "HoverRating",
            "params": [
                {
                    "name": "props",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "JSX para el renderizado",
                "type": "JSX"
            },
            "class": "TableUI",
            "module": "Knob"
        },
        {
            "file": "src\\view\\elements\\table.js",
            "line": 34,
            "itemtype": "property",
            "name": "state",
            "type": "Object",
            "class": "TableUI",
            "module": "Knob"
        },
        {
            "file": "src\\view\\elements\\table.js",
            "line": 51,
            "description": "Colapsa la zona de filtros",
            "itemtype": "method",
            "name": "collapse",
            "class": "TableUI",
            "module": "Knob"
        },
        {
            "file": "src\\view\\elements\\table.js",
            "line": 66,
            "description": "Filtra por rango",
            "itemtype": "method",
            "name": "checkRange",
            "params": [
                {
                    "name": "range",
                    "description": "Rango",
                    "type": "String"
                },
                {
                    "name": "rating",
                    "description": "Valoración",
                    "type": "Float"
                },
                {
                    "name": "ratingfilter",
                    "description": "Filtro de valoración",
                    "type": "Float"
                }
            ],
            "return": {
                "description": "Boolean"
            },
            "access": "private",
            "tagname": "",
            "class": "TableUI",
            "module": "Knob"
        },
        {
            "file": "src\\view\\elements\\table.js",
            "line": 107,
            "description": "Filtra la tabla",
            "itemtype": "method",
            "name": "filterTable",
            "params": [
                {
                    "name": "name",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "toSearch",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "category",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "filter",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "rating",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "tr",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "range",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "TableUI",
            "module": "Knob"
        },
        {
            "file": "src\\view\\elements\\table.js",
            "line": 148,
            "description": "Busca un elemento en la tabla",
            "itemtype": "method",
            "name": "searchInTable",
            "class": "TableUI",
            "module": "Knob"
        },
        {
            "file": "src\\view\\elements\\table.js",
            "line": 202,
            "description": "Actualiza el contenido de la tabla",
            "itemtype": "method",
            "name": "updateTable",
            "async": 1,
            "class": "TableUI",
            "module": "Knob"
        },
        {
            "file": "src\\view\\elements\\table.js",
            "line": 220,
            "description": "Método que se ejecuta antes de renderizar el componente. Actauliza la tabla\ny obtiene las notas",
            "itemtype": "method",
            "name": "componentDidMount",
            "async": 1,
            "class": "TableUI",
            "module": "Knob"
        },
        {
            "file": "src\\view\\elements\\table.js",
            "line": 234,
            "description": "Manda un mensajae a la fachada para cargar un sonido",
            "itemtype": "method",
            "name": "loadSound",
            "return": {
                "description": "respuesta",
                "type": "Object"
            },
            "async": 1,
            "class": "TableUI",
            "module": "Knob"
        },
        {
            "file": "src\\view\\elements\\table.js",
            "line": 250,
            "description": "Manda un mensajae a la fachada para eliminar un sonido",
            "itemtype": "method",
            "name": "deleteSound",
            "return": {
                "description": "respuesta",
                "type": "Object"
            },
            "async": 1,
            "class": "TableUI",
            "module": "Knob"
        },
        {
            "file": "src\\view\\elements\\table.js",
            "line": 262,
            "description": "Manda la orden para enseñar un modal",
            "itemtype": "method",
            "name": "showModal",
            "params": [
                {
                    "name": "id",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "TableUI",
            "module": "Knob"
        },
        {
            "file": "src\\view\\elements\\table.js",
            "line": 272,
            "description": "Manda la orden para enseñar un modal",
            "itemtype": "method",
            "name": "showModalDelete",
            "params": [
                {
                    "name": "id",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "TableUI",
            "module": "Knob"
        },
        {
            "file": "src\\view\\elements\\table.js",
            "line": 283,
            "description": "Método que devuelve el componente TableUI para ser renderizado",
            "itemtype": "method",
            "name": "render",
            "return": {
                "description": "Código html del componente Distorsion"
            },
            "class": "TableUI",
            "module": "Knob"
        },
        {
            "file": "src\\view\\analyser-component.js",
            "line": 23,
            "description": "Método del ciclo de vida de React que se encarga de simular un click",
            "itemtype": "method",
            "name": "componentDidMount",
            "class": "Anlyser",
            "module": "Knob"
        },
        {
            "file": "src\\view\\analyser-component.js",
            "line": 32,
            "description": "Método del ciclo de vida de React",
            "itemtype": "method",
            "name": "componentDidUpdate",
            "class": "Anlyser",
            "module": "Knob"
        },
        {
            "file": "src\\view\\analyser-component.js",
            "line": 41,
            "description": "Se encarga de crear el canva",
            "itemtype": "method",
            "name": "createCanva",
            "params": [
                {
                    "name": "event",
                    "description": "",
                    "type": "Event"
                }
            ],
            "class": "Anlyser",
            "module": "Knob"
        },
        {
            "file": "src\\view\\analyser-component.js",
            "line": 62,
            "description": "Se encarga de transladar el canva",
            "itemtype": "method",
            "name": "translateCanva",
            "class": "Anlyser",
            "module": "Knob"
        },
        {
            "file": "src\\view\\analyser-component.js",
            "line": 87,
            "description": "Detecta la frecuencia en el gráfico",
            "itemtype": "method",
            "name": "detectFreq",
            "params": [
                {
                    "name": "event",
                    "description": "",
                    "type": "Evento"
                }
            ],
            "class": "Anlyser",
            "module": "Knob"
        },
        {
            "file": "src\\view\\analyser-component.js",
            "line": 115,
            "description": "Se encarga de dibujar el canva",
            "itemtype": "method",
            "name": "draw",
            "class": "Anlyser",
            "module": "Knob"
        },
        {
            "file": "src\\view\\analyser-component.js",
            "line": 168,
            "description": "Método que devuelve el componente Analyser para ser renderizado",
            "itemtype": "method",
            "name": "render",
            "return": {
                "description": "Código html del componente Analyser"
            },
            "class": "Anlyser",
            "module": "Knob"
        },
        {
            "file": "src\\view\\errorPage-component.js",
            "line": 19,
            "description": "Método que devuelve el componente Errorpage para ser renderizado",
            "itemtype": "method",
            "name": "render",
            "return": {
                "description": "Código html del componente Errorpage"
            },
            "class": "ErrorPage",
            "module": "Knob"
        },
        {
            "file": "src\\view\\fx-components.js",
            "line": 27,
            "description": "Método que se encarga de llamar a los respectivos setters\nde los efectos en función del que se quiera modificar",
            "itemtype": "method",
            "name": "setFx",
            "params": [
                {
                    "name": "param",
                    "description": "Efecto a modificar",
                    "type": "String"
                },
                {
                    "name": "object",
                    "description": "Datos nuevos",
                    "type": "JSON"
                }
            ],
            "class": "Distorsion",
            "module": "Knob"
        },
        {
            "file": "src\\view\\fx-components.js",
            "line": 54,
            "description": "Método que devuelve el componente FX para ser renderizado que representa\nla vista de efecots",
            "itemtype": "method",
            "name": "render",
            "return": {
                "description": "Código html del componente FX"
            },
            "class": "Distorsion",
            "module": "Knob"
        },
        {
            "file": "src\\view\\head-component.js",
            "line": 38,
            "description": "Comprueba si los osciladores estan encendidos",
            "itemtype": "method",
            "name": "checkOscillators",
            "class": "Header",
            "module": "FX"
        },
        {
            "file": "src\\view\\head-component.js",
            "line": 55,
            "description": "Muestra un modal",
            "itemtype": "method",
            "name": "showModal",
            "class": "Header",
            "module": "FX"
        },
        {
            "file": "src\\view\\head-component.js",
            "line": 67,
            "description": "Getter del estado del componente",
            "itemtype": "method",
            "name": "getState",
            "return": {
                "description": "estado",
                "type": "Object"
            },
            "class": "Header",
            "module": "FX"
        },
        {
            "file": "src\\view\\head-component.js",
            "line": 76,
            "description": "Devuelve si esta encendido el oscilador pasado como parametro",
            "itemtype": "method",
            "name": "getAvailable",
            "params": [
                {
                    "name": "Id",
                    "description": "Identificador",
                    "type": "Char"
                }
            ],
            "return": {
                "description": "estado",
                "type": "Boolean"
            },
            "class": "Header",
            "module": "FX"
        },
        {
            "file": "src\\view\\head-component.js",
            "line": 87,
            "description": "Setter del nombre del sonido cargado",
            "itemtype": "method",
            "name": "setName",
            "params": [
                {
                    "name": "name",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "Header",
            "module": "FX"
        },
        {
            "file": "src\\view\\head-component.js",
            "line": 96,
            "description": "Indica al padre que tiene que enseñar el layer de osciladores",
            "itemtype": "method",
            "name": "showOsc",
            "class": "Header",
            "module": "FX"
        },
        {
            "file": "src\\view\\head-component.js",
            "line": 104,
            "description": "Indica al padre que tiene que enseñar el layer de efectos",
            "itemtype": "method",
            "name": "showOsc",
            "class": "Header",
            "module": "FX"
        },
        {
            "file": "src\\view\\head-component.js",
            "line": 112,
            "description": "Indica al padre que tiene que enseñar el layer de tabla de sonidos",
            "itemtype": "method",
            "name": "showLb",
            "class": "Header",
            "module": "FX"
        },
        {
            "file": "src\\view\\head-component.js",
            "line": 120,
            "description": "Indica al padre que tiene que enseñar el layer de EQ",
            "itemtype": "method",
            "name": "showEQ",
            "class": "Header",
            "module": "FX"
        },
        {
            "file": "src\\view\\head-component.js",
            "line": 128,
            "description": "Indica al padre que tiene que actualizar la tabla de sonidos",
            "itemtype": "method",
            "name": "updateTable",
            "class": "Header",
            "module": "FX"
        },
        {
            "file": "src\\view\\head-component.js",
            "line": 137,
            "description": "Gestiona los botones de grabación y manda el mensaje correspondiente a la fachada",
            "itemtype": "method",
            "name": "rec",
            "params": [
                {
                    "name": "state",
                    "description": "botón pulsado",
                    "type": "String"
                }
            ],
            "class": "Header",
            "module": "FX"
        },
        {
            "file": "src\\view\\head-component.js",
            "line": 168,
            "description": "Método que devuelve el componente Header para ser renderizado",
            "itemtype": "method",
            "name": "render",
            "return": {
                "description": "Código html del componente Header"
            },
            "class": "Header",
            "module": "FX"
        },
        {
            "file": "src\\view\\library-components.js",
            "line": 26,
            "description": "Indica al hijo que debe actualizar la tabla",
            "itemtype": "method",
            "name": "updateTable",
            "class": "Library",
            "module": "FX"
        },
        {
            "file": "src\\view\\library-components.js",
            "line": 35,
            "description": "Obtiene el nuevo estado y se lo pasa al padre",
            "return": {
                "description": "datos del sonido",
                "type": "Object"
            },
            "class": "Library",
            "module": "FX"
        },
        {
            "file": "src\\view\\library-components.js",
            "line": 44,
            "description": "Método que devuelve el componente Library para ser renderizado",
            "itemtype": "method",
            "name": "render",
            "return": {
                "description": "Código html del componente Library"
            },
            "class": "Library",
            "module": "FX"
        },
        {
            "file": "src\\view\\login-component.js",
            "line": 20,
            "description": "Comprueba el estado de un código de respuesta HTTP",
            "itemtype": "method",
            "name": "checkStatus",
            "params": [
                {
                    "name": "status",
                    "description": "",
                    "type": "Integer"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "Login",
            "module": "FX"
        },
        {
            "file": "src\\view\\login-component.js",
            "line": 44,
            "description": "Realiza la petición de login e interpreta la respuesta",
            "itemtype": "method",
            "name": "login",
            "params": [
                {
                    "name": "user",
                    "description": "Datos de login",
                    "type": "Object"
                }
            ],
            "access": "private",
            "tagname": "",
            "async": 1,
            "class": "Login",
            "module": "FX"
        },
        {
            "file": "src\\view\\login-component.js",
            "line": 102,
            "description": "Valida el formulario de login",
            "itemtype": "method",
            "name": "checkForm",
            "async": 1,
            "class": "Login",
            "module": "FX"
        },
        {
            "file": "src\\view\\login-component.js",
            "line": 141,
            "description": "Método que devuelve el componente Login para ser renderizado",
            "itemtype": "method",
            "name": "render",
            "return": {
                "description": "Código html del componente Login"
            },
            "class": "Login",
            "module": "FX"
        },
        {
            "file": "src\\view\\navbar.js",
            "line": 22,
            "description": "Método que obtiene el link activo",
            "itemtype": "method",
            "name": "getNavLinkClass",
            "params": [
                {
                    "name": "path",
                    "description": "link",
                    "type": "String"
                }
            ],
            "class": "Navigator",
            "module": "Navigator"
        },
        {
            "file": "src\\view\\navbar.js",
            "line": 48,
            "description": "Método que construlle el componente de la interfaz relativo a el navegador.",
            "itemtype": "method",
            "name": "render",
            "return": {
                "description": "Código html del componente navegador"
            },
            "class": "Navigator",
            "module": "Navigator"
        },
        {
            "file": "src\\view\\osc-components.js",
            "line": 24,
            "description": "Identificador del oscilador",
            "itemtype": "property",
            "name": "#osc",
            "type": "Char",
            "access": "private",
            "tagname": "",
            "class": "Oscilador",
            "module": "Navigator"
        },
        {
            "file": "src\\view\\osc-components.js",
            "line": 32,
            "description": "Referencia a la clase Knob",
            "itemtype": "property",
            "name": "_KnobVol",
            "type": "Ref",
            "class": "Oscilador",
            "module": "Navigator"
        },
        {
            "file": "src\\view\\osc-components.js",
            "line": 40,
            "description": "Referencia a la clase Envelope",
            "itemtype": "property",
            "name": "envelope",
            "type": "Ref",
            "class": "Oscilador",
            "module": "Navigator"
        },
        {
            "file": "src\\view\\osc-components.js",
            "line": 74,
            "description": "Método que se encarga de comprobar si esta encendido o apagado \nel oscilador",
            "itemtype": "method",
            "name": "checkChecked",
            "class": "Oscilador",
            "module": "Navigator"
        },
        {
            "file": "src\\view\\osc-components.js",
            "line": 101,
            "description": "Método que se encarga de comprobar que onda esta seleccionada en el \nmomento de la llamada",
            "itemtype": "method",
            "name": "checkWave",
            "class": "Oscilador",
            "module": "Navigator"
        },
        {
            "file": "src\\view\\osc-components.js",
            "line": 135,
            "description": "Método que se encarga de enviar al controlador el nivel de paneo\nque el usuario quiere para un oscilador",
            "itemtype": "method",
            "name": "setPan",
            "params": [
                {
                    "name": "osc",
                    "description": "Id del oscilador",
                    "type": "Char"
                }
            ],
            "class": "Oscilador",
            "module": "Navigator"
        },
        {
            "file": "src\\view\\osc-components.js",
            "line": 149,
            "description": "Setter del estado del oscilador",
            "itemtype": "method",
            "name": "setOsc",
            "params": [
                {
                    "name": "osc",
                    "description": "",
                    "type": "Objetc"
                }
            ],
            "class": "Oscilador",
            "module": "Navigator"
        },
        {
            "file": "src\\view\\osc-components.js",
            "line": 183,
            "description": "Método que construlle el componente de la interfaz relativo a el oscilador, que contiene los Knobs de la envolvente,\nel selector de onda, el knob de volumen y el botón de encendido y apagado.",
            "itemtype": "method",
            "name": "render",
            "return": {
                "description": "Código html del componente oscilador"
            },
            "class": "Oscilador",
            "module": "Navigator"
        },
        {
            "file": "src\\view\\piano-component.js",
            "line": 19,
            "description": "Octava en la que se encuentra el piano",
            "itemtype": "property",
            "name": "#octave",
            "type": "String",
            "access": "private",
            "tagname": "",
            "class": "Piano",
            "module": "OscComponents"
        },
        {
            "file": "src\\view\\piano-component.js",
            "line": 27,
            "description": "Lista de las teclas presionadas por el usuario",
            "itemtype": "property",
            "name": "pressedKeys",
            "type": "Object",
            "class": "Piano",
            "module": "OscComponents"
        },
        {
            "file": "src\\view\\piano-component.js",
            "line": 35,
            "description": "Lista con las notas y sus frecuencias",
            "itemtype": "property",
            "name": "notes",
            "type": "Object",
            "class": "Piano",
            "module": "OscComponents"
        },
        {
            "file": "src\\view\\piano-component.js",
            "line": 55,
            "description": "Método que se encarga de identificar que nota ha sido accionada por el usuario\ny una vez identificada, mandarla al controlador para que se reproduzca.",
            "itemtype": "method",
            "name": "playNote",
            "params": [
                {
                    "name": "oct",
                    "description": "Inidica si la nota es de la octava de arriba o de abajo del piano",
                    "type": "String"
                },
                {
                    "name": "key",
                    "description": "Nota presionada",
                    "type": "String"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Piano",
            "module": "OscComponents"
        },
        {
            "file": "src\\view\\piano-component.js",
            "line": 100,
            "description": "Método que realiza una petición a la base de datos para obtener un listado\nde las notas con sus frecuencias. Este listado lo almacena en una variable de clase",
            "itemtype": "method",
            "name": "fetchNotes",
            "class": "Piano",
            "module": "OscComponents"
        },
        {
            "file": "src\\view\\piano-component.js",
            "line": 119,
            "description": "Este método cambia el número de la octava que aparece junto a cada nota\nen el piano.",
            "itemtype": "method",
            "name": "changeHtmlNotes",
            "class": "Piano",
            "module": "OscComponents"
        },
        {
            "file": "src\\view\\piano-component.js",
            "line": 160,
            "description": "Cuando el usuario pulsa en el botón de subir octava, se llama a este método\npara que actualice la octava de las notas.",
            "itemtype": "method",
            "name": "upOctave",
            "class": "Piano",
            "module": "OscComponents"
        },
        {
            "file": "src\\view\\piano-component.js",
            "line": 177,
            "description": "Cuando el usuario pulsa en el botón de bajar octava, se llama a este método\npara que actualice la octava de las notas.",
            "itemtype": "method",
            "name": "downOctave",
            "class": "Piano",
            "module": "OscComponents"
        },
        {
            "file": "src\\view\\piano-component.js",
            "line": 193,
            "description": "Método que recibe como argumento el evento que se produce cuando el usuario clica en una\nnota del piano y que se encarga de identificar esta nota e indicarsela al método que se encarga de \nenviarsela al controlador",
            "itemtype": "method",
            "name": "notePlayed",
            "params": [
                {
                    "name": "e",
                    "description": "Evento que se corresponde con el click en una nota",
                    "type": "Event"
                }
            ],
            "class": "Piano",
            "module": "OscComponents"
        },
        {
            "file": "src\\view\\piano-component.js",
            "line": 228,
            "description": "Método que se llama cuando el usuario presiona una de tecla del teclado asiganada a una\nnota del piano y que se encarga de identificar esta nota para simular que se clica en ella \ne indicarsela al método que se encarga de enviarsela al controlador",
            "itemtype": "method",
            "name": "notePlayed",
            "params": [
                {
                    "name": "type",
                    "description": "Tipo de la not, si es negra o blanca",
                    "type": "String"
                },
                {
                    "name": "note",
                    "description": "Nota presionada",
                    "type": "String"
                },
                {
                    "name": "keyname",
                    "description": "Tecla presionada",
                    "type": "Char"
                },
                {
                    "name": "octave",
                    "description": "Octava del piano de la nota presionada",
                    "type": "String"
                }
            ],
            "class": "Piano",
            "module": "OscComponents"
        },
        {
            "file": "src\\view\\piano-component.js",
            "line": 259,
            "description": "Método que devuelve el código necesario para renderizar el componente",
            "itemtype": "method",
            "name": "render",
            "return": {
                "description": "Código html del componente piano y escuchadores de eventos"
            },
            "class": "Piano",
            "module": "OscComponents"
        },
        {
            "file": "src\\view\\piano-component.js",
            "line": 304,
            "description": "Se acciona cada vez que se pulsa una tecla del teclado",
            "itemtype": "event",
            "name": "keydown",
            "class": "Piano",
            "module": "OscComponents"
        },
        {
            "file": "src\\view\\piano-component.js",
            "line": 421,
            "description": "Se acciona cuando se levanta una tecla del teclado presionada",
            "itemtype": "event",
            "name": "keyup",
            "class": "Piano",
            "module": "OscComponents"
        },
        {
            "file": "src\\view\\profile-component.js",
            "line": 35,
            "description": "Se encarga de obtener el perfil del usuario y setearlo antes de que el componente\nse renderice",
            "itemtype": "method",
            "name": "componentDidMount",
            "class": "Profile",
            "module": "Piano"
        },
        {
            "file": "src\\view\\profile-component.js",
            "line": 55,
            "description": "Pinta la barra de espacio disponible",
            "itemtype": "method",
            "name": "paintProgressBar",
            "access": "private",
            "tagname": "",
            "class": "Profile",
            "module": "Piano"
        },
        {
            "file": "src\\view\\profile-component.js",
            "line": 68,
            "description": "Se encarga de interpretar una respuesta de la fachada",
            "itemtype": "method",
            "name": "handleResponse",
            "params": [
                {
                    "name": "response",
                    "description": "",
                    "type": "Object"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Profile",
            "module": "Piano"
        },
        {
            "file": "src\\view\\profile-component.js",
            "line": 108,
            "description": "Esconde el cargador",
            "itemtype": "method",
            "name": "hideLoader",
            "params": [
                {
                    "name": "code",
                    "description": "",
                    "type": "Integer"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Profile",
            "module": "Piano"
        },
        {
            "file": "src\\view\\profile-component.js",
            "line": 127,
            "description": "Enseña el cargador",
            "itemtype": "method",
            "name": "showLoader",
            "access": "private",
            "tagname": "",
            "class": "Profile",
            "module": "Piano"
        },
        {
            "file": "src\\view\\profile-component.js",
            "line": 138,
            "description": "Manda los mensajes para editar el perfil",
            "itemtype": "method",
            "name": "confirmEdit",
            "async": 1,
            "class": "Profile",
            "module": "Piano"
        },
        {
            "file": "src\\view\\profile-component.js",
            "line": 175,
            "description": "Actualiza los valores de la vista con los del perfil editado",
            "itemtype": "method",
            "name": "editProfile",
            "class": "Profile",
            "module": "Piano"
        },
        {
            "file": "src\\view\\profile-component.js",
            "line": 201,
            "description": "Enseña un modal",
            "itemtype": "method",
            "name": "showModal",
            "class": "Profile",
            "module": "Piano"
        },
        {
            "file": "src\\view\\profile-component.js",
            "line": 212,
            "description": "Tranforma un string en una fecha para el input del formulario",
            "itemtype": "method",
            "name": "toDate",
            "params": [
                {
                    "name": "string",
                    "description": "Fecha",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Date"
            },
            "class": "Profile",
            "module": "Piano"
        },
        {
            "file": "src\\view\\profile-component.js",
            "line": 229,
            "description": "Método que devuelve el componente Profile para ser renderizado",
            "itemtype": "method",
            "name": "render",
            "return": {
                "description": "Código html del componente Profile"
            },
            "class": "Profile",
            "module": "Piano"
        },
        {
            "file": "src\\view\\signup-component.js",
            "line": 25,
            "description": "Enseña el cargador",
            "itemtype": "method",
            "name": "showLoader",
            "access": "private",
            "tagname": "",
            "class": "SignUp",
            "module": "Piano"
        },
        {
            "file": "src\\view\\signup-component.js",
            "line": 36,
            "description": "Manda una petición para el registro e interpreta la respuesta",
            "itemtype": "method",
            "name": "register",
            "params": [
                {
                    "name": "reg",
                    "description": "Datos de registro",
                    "type": "Object"
                }
            ],
            "async": 1,
            "class": "SignUp",
            "module": "Piano"
        },
        {
            "file": "src\\view\\signup-component.js",
            "line": 87,
            "description": "Interpreta la respuesta del servidor",
            "itemtype": "method",
            "name": "handleResponse",
            "class": "SignUp",
            "module": "Piano"
        },
        {
            "file": "src\\view\\signup-component.js",
            "line": 105,
            "description": "Valida el formulario de registro",
            "itemtype": "method",
            "name": "checkForm",
            "class": "SignUp",
            "module": "Piano"
        },
        {
            "file": "src\\view\\signup-component.js",
            "line": 173,
            "description": "Método que devuelve el componente SignUp para ser renderizado",
            "itemtype": "method",
            "name": "render",
            "return": {
                "description": "Código html del componente SignUp"
            },
            "class": "SignUp",
            "module": "Piano"
        },
        {
            "file": "src\\App.js",
            "line": 44,
            "description": "Comprueba si un layer esta oculto",
            "itemtype": "method",
            "name": "isOff",
            "params": [
                {
                    "name": "element",
                    "description": "Id del layer",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "access": "private",
            "tagname": "",
            "class": "App",
            "module": "Piano"
        },
        {
            "file": "src\\App.js",
            "line": 64,
            "description": "Indica a la fahcada que hay que encender los osciladores",
            "itemtype": "method",
            "name": "__onOscillators",
            "access": "private",
            "tagname": "",
            "class": "App",
            "module": "Piano"
        },
        {
            "file": "src\\App.js",
            "line": 81,
            "description": "Indica a la fahcada que hay que apagar los osciladores",
            "itemtype": "method",
            "name": "__onOscillators",
            "access": "private",
            "tagname": "",
            "class": "App",
            "module": "Piano"
        },
        {
            "file": "src\\App.js",
            "line": 98,
            "description": "Muestra el layer de efectos",
            "itemtype": "method",
            "name": "showFX",
            "class": "App",
            "module": "Piano"
        },
        {
            "file": "src\\App.js",
            "line": 129,
            "description": "Muestra el layer de osciladores",
            "itemtype": "method",
            "name": "showOsc",
            "class": "App",
            "module": "Piano"
        },
        {
            "file": "src\\App.js",
            "line": 158,
            "description": "Muestra el layer de tabla de sonidos",
            "itemtype": "method",
            "name": "showLb",
            "class": "App",
            "module": "Piano"
        },
        {
            "file": "src\\App.js",
            "line": 190,
            "description": "Muestra el layer de EQ",
            "itemtype": "method",
            "name": "showEQ",
            "class": "App",
            "module": "Piano"
        },
        {
            "file": "src\\App.js",
            "line": 220,
            "description": "Cuando se carga el sonido inicia el proceso para que se actualicen los valores",
            "itemtype": "method",
            "name": "loadSound",
            "return": {
                "description": "respuesta",
                "type": "Object"
            },
            "class": "App",
            "module": "Piano"
        },
        {
            "file": "src\\App.js",
            "line": 251,
            "description": "Le dice al hijo que tiene que actualizar la tabla de sonidos",
            "itemtype": "method",
            "name": "updateTable",
            "class": "App",
            "module": "Piano"
        },
        {
            "file": "src\\App.js",
            "line": 260,
            "description": "Método que devuelve el componente App para ser renderizado que se corresponde con el sintetizador",
            "itemtype": "method",
            "name": "render",
            "return": {
                "description": "Código html del componente App"
            },
            "class": "App",
            "module": "Piano"
        }
    ],
    "warnings": [
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\controller\\analyser.js:73"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\controller\\analyser.js:83"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\controller\\analyser.js:97"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\controller\\dbFetcher.js:66"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\controller\\dbFetcher.js:87"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\controller\\dbFetcher.js:97"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\controller\\dbFetcher.js:107"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\controller\\delay.js:50"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\controller\\distorsion.js:32"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\controller\\distorsion.js:75"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\controller\\filter.js:121"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\controller\\filter.js:131"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\controller\\loader.js:48"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\controller\\loader.js:86"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\controller\\loader.js:123"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\controller\\loader.js:166"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\controller\\loader.js:186"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\controller\\loader.js:212"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\controller\\midi.js:303"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\controller\\midi.js:329"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\controller\\oscillator.js:150"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\controller\\oscillator.js:160"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\controller\\oscillator.js:170"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\controller\\oscillator.js:180"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\controller\\reverb.js:86"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\controller\\reverb.js:131"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\controller\\saver.js:155"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\controller\\saver.js:178"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\controller\\saver.js:229"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\controller\\saver.js:276"
        },
        {
            "message": "unknown tag: mehtod",
            "line": " src\\controller\\synth.js:238"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\controller\\synth.js:238"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\controller\\synth.js:312"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\controller\\synth.js:448"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\controller\\synth.js:465"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\controller\\synth.js:478"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\controller\\synth.js:512"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\controller\\voice.js:159"
        },
        {
            "message": "unknown tag: methos",
            "line": " src\\view\\elements\\modals\\modal.js:51"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\view\\elements\\modals\\modal.js:211"
        },
        {
            "message": "replacing incorrect tag: function with method",
            "line": " src\\view\\elements\\rating.js:27"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\view\\elements\\rating.js:27"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\view\\elements\\table.js:66"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\view\\elements\\table.js:234"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\view\\elements\\table.js:250"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\view\\head-component.js:67"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\view\\head-component.js:76"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\view\\library-components.js:35"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\view\\login-component.js:20"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\view\\navbar.js:48"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\view\\osc-components.js:183"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\view\\piano-component.js:259"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\view\\profile-component.js:212"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\App.js:44"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\App.js:220"
        },
        {
            "message": "Missing item type",
            "line": " src\\controller\\delay.js:48"
        },
        {
            "message": "Missing item type",
            "line": " src\\controller\\delay.js:63"
        },
        {
            "message": "Missing item type",
            "line": " src\\controller\\filter.js:119"
        },
        {
            "message": "Missing item type",
            "line": " src\\controller\\filter.js:145"
        },
        {
            "message": "Missing item type\nMétodo que se encarga de generar un impulso necesario para\ngenerar un efecto de reverb",
            "line": " src\\controller\\reverb.js:86"
        },
        {
            "message": "Missing item type",
            "line": " src\\controller\\reverb.js:129"
        },
        {
            "message": "Missing item type",
            "line": " src\\controller\\reverb.js:147"
        },
        {
            "message": "Missing item type\nMétodo que se encarga de cominacar al saver que tiene que mandar una petición",
            "line": " src\\controller\\synth.js:238"
        },
        {
            "message": "Missing item type",
            "line": " src\\controller\\synth.js:446"
        },
        {
            "message": "Missing item type",
            "line": " src\\controller\\synth.js:530"
        },
        {
            "message": "Missing item type\nGetter del tipo de onda de los oscilladores de las voces",
            "line": " src\\controller\\voice.js:159"
        },
        {
            "message": "Missing item type\nCompureba que osciladores están encendidos",
            "line": " src\\view\\elements\\modals\\modal.js:51"
        },
        {
            "message": "Missing item type\nObtiene el nuevo estado y se lo pasa al padre",
            "line": " src\\view\\library-components.js:35"
        }
    ]
}