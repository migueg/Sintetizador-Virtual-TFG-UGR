{
    "project": {},
    "files": {
        "src\\controller\\oscillator.js": {
            "name": "src\\controller\\oscillator.js",
            "modules": {},
            "classes": {
                "oscillator": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\controller\\synth.js": {
            "name": "src\\controller\\synth.js",
            "modules": {
                "synth": 1
            },
            "classes": {
                "Synth": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\controller\\voice.js": {
            "name": "src\\controller\\voice.js",
            "modules": {},
            "classes": {
                "Voice": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\view\\elements\\envelope.js": {
            "name": "src\\view\\elements\\envelope.js",
            "modules": {},
            "classes": {
                "Envelope": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\view\\elements\\knobtypes.js": {
            "name": "src\\view\\elements\\knobtypes.js",
            "modules": {
                "types": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src\\view\\elements\\limitedKnob.js": {
            "name": "src\\view\\elements\\limitedKnob.js",
            "modules": {
                "Knob": 1
            },
            "classes": {
                "LimitedKnob": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\view\\navbar.js": {
            "name": "src\\view\\navbar.js",
            "modules": {
                "Navigator": 1
            },
            "classes": {
                "Navigator": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\view\\osc-components.js": {
            "name": "src\\view\\osc-components.js",
            "modules": {
                "OscComponents": 1
            },
            "classes": {
                "Oscilador": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\view\\piano-component.js": {
            "name": "src\\view\\piano-component.js",
            "modules": {
                "Piano": 1
            },
            "classes": {
                "Piano": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\App.js": {
            "name": "src\\App.js",
            "modules": {
                "App": 1
            },
            "classes": {
                "App": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\index.js": {
            "name": "src\\index.js",
            "modules": {},
            "classes": {
                "Index": 1
            },
            "fors": {},
            "namespaces": {}
        }
    },
    "modules": {
        "synth": {
            "name": "synth",
            "submodules": {},
            "elements": {},
            "classes": {
                "oscillator": 1,
                "Synth": 1,
                "Voice": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "src\\controller\\voice.js",
            "line": 2,
            "description": "Proporciona una clase fachada para el controlador"
        },
        "Knob": {
            "name": "Knob",
            "submodules": {
                "undefined": 1
            },
            "elements": {},
            "classes": {
                "LimitedKnob": 1,
                "Envelope": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "src\\view\\elements\\limitedKnob.js",
            "line": 12,
            "description": "Proporciona los elementos de la interfaz para los knobs"
        },
        "types": {
            "name": "types",
            "submodules": {},
            "elements": {},
            "classes": {},
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "src\\view\\elements\\knobtypes.js",
            "line": 2,
            "description": "Enumerado con los tipos de knobs"
        },
        "Navigator": {
            "name": "Navigator",
            "submodules": {},
            "elements": {},
            "classes": {
                "Navigator": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "src\\view\\navbar.js",
            "line": 13,
            "description": "Proporciona la barra de navegación del Frontend"
        },
        "OscComponents": {
            "name": "OscComponents",
            "submodules": {},
            "elements": {},
            "classes": {
                "Oscilador": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "src\\view\\osc-components.js",
            "line": 14,
            "description": "Proporciona la interfaz correspondiente a los dos osciladores contruida"
        },
        "Piano": {
            "name": "Piano",
            "submodules": {},
            "elements": {},
            "classes": {
                "Piano": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "src\\view\\piano-component.js",
            "line": 8,
            "description": "Proporciona la interfaz correspondiente a el piano"
        },
        "App": {
            "name": "App",
            "submodules": {},
            "elements": {},
            "classes": {
                "App": 1,
                "Index": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "src\\index.js",
            "line": 9,
            "description": "Modulo de la aplicación"
        }
    },
    "classes": {
        "oscillator": {
            "name": "oscillator",
            "shortname": "oscillator",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "synth",
            "file": "src\\controller\\oscillator.js",
            "line": 4,
            "description": "Clase que representa un oscilador analógico",
            "is_constructor": 1
        },
        "Synth": {
            "name": "Synth",
            "shortname": "Synth",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "synth",
            "file": "src\\controller\\synth.js",
            "line": 3,
            "description": "Clase Fachada del controlador que se comunica con los elementos de la vista.",
            "is_constructor": 1
        },
        "Voice": {
            "name": "Voice",
            "shortname": "Voice",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "synth",
            "namespace": "",
            "file": "src\\controller\\voice.js",
            "line": 2,
            "description": "Clase que implementa la polifinia a partir de un conjunto de voces.\nCada voz se corresponde con un oscilador real de la Web Audio API",
            "is_constructor": 1,
            "params": [
                {
                    "name": "type",
                    "description": "Tipo de la onda",
                    "type": "String"
                },
                {
                    "name": "context",
                    "description": "Contexto de audi",
                    "type": "Object"
                },
                {
                    "name": "envelope",
                    "description": "Parametros de la envolvente",
                    "type": "JSON"
                },
                {
                    "name": "gain",
                    "description": "Nodo de la ganancia del oscilador al que pertenece",
                    "type": "Object"
                }
            ]
        },
        "Envelope": {
            "name": "Envelope",
            "shortname": "Envelope",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Knob",
            "namespace": "",
            "file": "src\\view\\elements\\envelope.js",
            "line": 6,
            "description": "La clase Envelope contiene el componente de la interfaz relativo a\nla envolvente de un oscilador. Proporciona un conjunto de knobs para modificar\nsus respectivos parametros (Attack,Sustain,Deacay,Release). \nclicando en este.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "props",
                    "description": "Propiedades de la envolvente",
                    "type": "Object"
                }
            ]
        },
        "LimitedKnob": {
            "name": "LimitedKnob",
            "shortname": "LimitedKnob",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Knob",
            "namespace": "",
            "file": "src\\view\\elements\\limitedKnob.js",
            "line": 12,
            "description": "Esta clase genera el componente de la interfaz para un knob limitado\nque puede ser usado para disitintos fines atendiendo a su tipo",
            "is_constructor": 1,
            "params": [
                {
                    "name": "props",
                    "description": "Objeto que contiene las propiedades del componente",
                    "type": "Object"
                }
            ]
        },
        "Navigator": {
            "name": "Navigator",
            "shortname": "Navigator",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Navigator",
            "namespace": "",
            "file": "src\\view\\navbar.js",
            "line": 13,
            "description": "Esta clase genera el componente de la interfaz correspondiente\ncon la barra de navegación",
            "is_constructor": 1
        },
        "Oscilador": {
            "name": "Oscilador",
            "shortname": "Oscilador",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "OscComponents",
            "namespace": "",
            "file": "src\\view\\osc-components.js",
            "line": 14,
            "description": "Esta clase contiene el componente de la interfaz que simula\nun oscilador analógico, de manera que el usuario pueda modificar sus parámetros",
            "is_constructor": 1
        },
        "Piano": {
            "name": "Piano",
            "shortname": "Piano",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Piano",
            "namespace": "",
            "file": "src\\view\\piano-component.js",
            "line": 8,
            "description": "La clase piano contiene el componente de la interfaz que simula\nun piano real, de manera que el usuario pueda repodrucir sonidos \nclicando en este.",
            "is_constructor": 1
        },
        "App": {
            "name": "App",
            "shortname": "App",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "App",
            "namespace": "",
            "file": "src\\App.js",
            "line": 10,
            "description": "Es la clase principal que contiene todos los componentes organizados",
            "is_constructor": 1
        },
        "Index": {
            "name": "Index",
            "shortname": "Index",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "App",
            "namespace": "",
            "file": "src\\index.js",
            "line": 9,
            "description": "Renderiza toda la aplicación",
            "is_constructor": 1
        }
    },
    "elements": {},
    "classitems": [
        {
            "file": "src\\controller\\oscillator.js",
            "line": 11,
            "description": "Contexto de audio para la aplicación de la Web Audio API",
            "itemtype": "property",
            "name": "audioCtx",
            "type": "Object",
            "access": "private",
            "tagname": "",
            "class": "oscillator"
        },
        {
            "file": "src\\controller\\oscillator.js",
            "line": 18,
            "description": "Nodo de ganancia del oscilador para controlar el volumen de este",
            "itemtype": "property",
            "name": "gainNode",
            "type": "Object",
            "access": "private",
            "tagname": "",
            "class": "oscillator"
        },
        {
            "file": "src\\controller\\oscillator.js",
            "line": 25,
            "description": "Guarda los valores de la envolvente",
            "itemtype": "property",
            "name": "envelope",
            "type": "JSON",
            "access": "private",
            "tagname": "",
            "class": "oscillator"
        },
        {
            "file": "src\\controller\\oscillator.js",
            "line": 32,
            "description": "Volumen del oscilador",
            "itemtype": "property",
            "name": "volume",
            "type": "Float",
            "access": "private",
            "tagname": "",
            "class": "oscillator"
        },
        {
            "file": "src\\controller\\oscillator.js",
            "line": 39,
            "description": "Flag que representa la disponibilidad del oscilador",
            "itemtype": "property",
            "name": "available",
            "type": "Boolean",
            "access": "private",
            "tagname": "",
            "class": "oscillator"
        },
        {
            "file": "src\\controller\\oscillator.js",
            "line": 46,
            "description": "Contiene una instancia de la clase Voice para lograr la polifonia",
            "itemtype": "property",
            "name": "voice",
            "type": "Object",
            "class": "oscillator"
        },
        {
            "file": "src\\controller\\oscillator.js",
            "line": 84,
            "description": "Método que enciende el oscilador",
            "itemtype": "method",
            "name": "onOscillator",
            "class": "oscillator"
        },
        {
            "file": "src\\controller\\oscillator.js",
            "line": 93,
            "description": "Método que apaga el oscilador",
            "itemtype": "method",
            "name": "offOscillator",
            "class": "oscillator"
        },
        {
            "file": "src\\controller\\oscillator.js",
            "line": 104,
            "description": "Método que reproduce una de las voces, dependiendo de la nota pasada \ncomo argumento",
            "itemtype": "method",
            "name": "play",
            "params": [
                {
                    "name": "key",
                    "description": "Nota",
                    "type": "String"
                }
            ],
            "class": "oscillator"
        },
        {
            "file": "src\\controller\\oscillator.js",
            "line": 126,
            "description": "Setter del tipo de onda",
            "itemtype": "method",
            "name": "setWave",
            "params": [
                {
                    "name": "wave",
                    "description": "Onda",
                    "type": "String"
                }
            ],
            "class": "oscillator"
        },
        {
            "file": "src\\controller\\oscillator.js",
            "line": 137,
            "description": "Setter del volumen",
            "itemtype": "method",
            "name": "setVolum",
            "params": [
                {
                    "name": "level",
                    "description": "Volumen",
                    "type": "Float"
                }
            ],
            "class": "oscillator"
        },
        {
            "file": "src\\controller\\oscillator.js",
            "line": 152,
            "description": "Setter del Attack",
            "itemtype": "method",
            "name": "setAttack",
            "params": [
                {
                    "name": "val",
                    "description": "Valor",
                    "type": "Float"
                }
            ],
            "class": "oscillator"
        },
        {
            "file": "src\\controller\\oscillator.js",
            "line": 163,
            "description": "Setter del Release",
            "itemtype": "method",
            "name": "setRelease",
            "params": [
                {
                    "name": "val",
                    "description": "Valor",
                    "type": "Float"
                }
            ],
            "class": "oscillator"
        },
        {
            "file": "src\\controller\\oscillator.js",
            "line": 173,
            "description": "Setter del Sustain",
            "itemtype": "method",
            "name": "setSustain",
            "params": [
                {
                    "name": "val",
                    "description": "Valor",
                    "type": "Float"
                }
            ],
            "class": "oscillator"
        },
        {
            "file": "src\\controller\\oscillator.js",
            "line": 183,
            "description": "Setter del Decay",
            "itemtype": "method",
            "name": "setDecay",
            "params": [
                {
                    "name": "val",
                    "description": "Valor",
                    "type": "Float"
                }
            ],
            "class": "oscillator"
        },
        {
            "file": "src\\controller\\synth.js",
            "line": 10,
            "description": "Instancia del osciladorA",
            "itemtype": "property",
            "name": "#osciladorA",
            "type": "Object",
            "access": "private",
            "tagname": "",
            "class": "Synth"
        },
        {
            "file": "src\\controller\\synth.js",
            "line": 18,
            "description": "Instancia del osciladorB",
            "itemtype": "property",
            "name": "#osciladorB",
            "type": "Object",
            "access": "private",
            "tagname": "",
            "class": "Synth"
        },
        {
            "file": "src\\controller\\synth.js",
            "line": 36,
            "description": "Método que se encarga de encender un oscilador",
            "itemtype": "method",
            "name": "onOscillator",
            "params": [
                {
                    "name": "osc",
                    "description": "Id del oscildor",
                    "type": "Char"
                }
            ],
            "class": "Synth"
        },
        {
            "file": "src\\controller\\synth.js",
            "line": 55,
            "description": "Método que se encarga de apagar un oscilador",
            "itemtype": "method",
            "name": "offOscillator",
            "params": [
                {
                    "name": "osc",
                    "description": "Id del oscildor",
                    "type": "Char"
                }
            ],
            "class": "Synth"
        },
        {
            "file": "src\\controller\\synth.js",
            "line": 72,
            "description": "Método que se encarga de tocar una nota de los osciladores",
            "itemtype": "method",
            "name": "playNote",
            "params": [
                {
                    "name": "key",
                    "description": "Nota",
                    "type": "Char"
                }
            ],
            "class": "Synth"
        },
        {
            "file": "src\\controller\\synth.js",
            "line": 84,
            "description": "Método que se encarga de seleccionar el tipo de onda de los osciladores",
            "itemtype": "method",
            "name": "selectWave",
            "params": [
                {
                    "name": "osc",
                    "description": "Id del oscilador",
                    "type": "Char"
                },
                {
                    "name": "wave",
                    "description": "Forma de la onda",
                    "type": "String"
                }
            ],
            "class": "Synth"
        },
        {
            "file": "src\\controller\\synth.js",
            "line": 105,
            "description": "Getter del volumen de los osciladores",
            "itemtype": "method",
            "name": "getVolum",
            "params": [
                {
                    "name": "osc",
                    "description": "Id del oscilador",
                    "type": "Char"
                }
            ],
            "return": {
                "description": "Volumen"
            },
            "class": "Synth"
        },
        {
            "file": "src\\controller\\synth.js",
            "line": 122,
            "description": "Setter del volumen de los osciladores",
            "itemtype": "method",
            "name": "setVolum",
            "params": [
                {
                    "name": "osc",
                    "description": "Id del oscilador",
                    "type": "Char"
                }
            ],
            "class": "Synth"
        },
        {
            "file": "src\\controller\\synth.js",
            "line": 144,
            "description": "Setter de los parámetros de la envolvente de los osciladores",
            "itemtype": "method",
            "name": "setEnvolve",
            "params": [
                {
                    "name": "osc",
                    "description": "Id del oscilador",
                    "type": "Char"
                },
                {
                    "name": "val",
                    "description": "Valor a cambiar",
                    "type": "Float"
                },
                {
                    "name": "param",
                    "description": "Parámetro de la envolvente a cambiar",
                    "type": "String"
                }
            ],
            "class": "Synth"
        },
        {
            "file": "src\\controller\\voice.js",
            "line": 14,
            "description": "Contexto de audio para la aplicación de la Web Audio API",
            "itemtype": "property",
            "name": "context",
            "type": "Object",
            "access": "private",
            "tagname": "",
            "class": "Voice",
            "module": "synth"
        },
        {
            "file": "src\\controller\\voice.js",
            "line": 21,
            "description": "Tipo de onda del oscilador",
            "itemtype": "property",
            "name": "type",
            "type": "String",
            "access": "private",
            "tagname": "",
            "class": "Voice",
            "module": "synth"
        },
        {
            "file": "src\\controller\\voice.js",
            "line": 28,
            "description": "Guarda los valores de la envolvente",
            "itemtype": "property",
            "name": "envelope",
            "type": "JSON",
            "access": "private",
            "tagname": "",
            "class": "Voice",
            "module": "synth"
        },
        {
            "file": "src\\controller\\voice.js",
            "line": 35,
            "description": "Nodo de ganancia del oscilador",
            "itemtype": "property",
            "name": "masterNode",
            "type": "Object",
            "access": "private",
            "tagname": "",
            "class": "Voice",
            "module": "synth"
        },
        {
            "file": "src\\controller\\voice.js",
            "line": 42,
            "description": "Contiene las ganacias particulares de cada voz",
            "itemtype": "property",
            "name": "gains",
            "type": "JSON",
            "access": "private",
            "tagname": "",
            "class": "Voice",
            "module": "synth"
        },
        {
            "file": "src\\controller\\voice.js",
            "line": 49,
            "description": "Contiene las voces correspondientes a cada nota",
            "itemtype": "property",
            "name": "voices",
            "type": "JSON",
            "access": "private",
            "tagname": "",
            "class": "Voice",
            "module": "synth"
        },
        {
            "file": "src\\controller\\voice.js",
            "line": 56,
            "description": "Contiene las voces que se estan reproduciendo",
            "itemtype": "property",
            "name": "activeVoices",
            "type": "JSON",
            "access": "private",
            "tagname": "",
            "class": "Voice",
            "module": "synth"
        },
        {
            "file": "src\\controller\\voice.js",
            "line": 63,
            "description": "Contiene las notas con sus frecuencias",
            "itemtype": "property",
            "name": "notes",
            "type": "JSON",
            "access": "private",
            "tagname": "",
            "class": "Voice",
            "module": "synth"
        },
        {
            "file": "src\\controller\\voice.js",
            "line": 101,
            "description": "Método que se encarga de crear una voz para cada una de las notas, es decir,\npara cada nota se crea un oscilador y lo conecta con un nodo de ganancia para\nlograr la polifonia",
            "itemtype": "method",
            "name": "createVocies",
            "class": "Voice",
            "module": "synth"
        },
        {
            "file": "src\\controller\\voice.js",
            "line": 133,
            "description": "Método que es llamado cuando se toca una nota. Almacena que voz se ha tocado\ny llama al metodo de la envolvente",
            "itemtype": "method",
            "name": "start",
            "params": [
                {
                    "name": "key",
                    "description": "Nota tocada",
                    "type": "String"
                },
                {
                    "name": "gain",
                    "description": "Volumen del oscilador",
                    "type": "Float"
                }
            ],
            "class": "Voice",
            "module": "synth"
        },
        {
            "file": "src\\controller\\voice.js",
            "line": 146,
            "description": "Setter del volumen",
            "itemtype": "method",
            "name": "setGain",
            "params": [
                {
                    "name": "key",
                    "description": "Nota tocada",
                    "type": "String"
                },
                {
                    "name": "gain",
                    "description": "Volumen del oscilador",
                    "type": "Float"
                }
            ],
            "class": "Voice",
            "module": "synth"
        },
        {
            "file": "src\\controller\\voice.js",
            "line": 159,
            "description": "Setter del Attack",
            "itemtype": "method",
            "name": "setAttack",
            "params": [
                {
                    "name": "val",
                    "description": "Valor",
                    "type": "Float"
                }
            ],
            "class": "Voice",
            "module": "synth"
        },
        {
            "file": "src\\controller\\voice.js",
            "line": 169,
            "description": "Setter del Release",
            "itemtype": "method",
            "name": "setRelease",
            "params": [
                {
                    "name": "val",
                    "description": "Valor",
                    "type": "Float"
                }
            ],
            "class": "Voice",
            "module": "synth"
        },
        {
            "file": "src\\controller\\voice.js",
            "line": 179,
            "description": "Setter del Sustain",
            "itemtype": "method",
            "name": "setSustain",
            "params": [
                {
                    "name": "val",
                    "description": "Valor",
                    "type": "Float"
                }
            ],
            "class": "Voice",
            "module": "synth"
        },
        {
            "file": "src\\controller\\voice.js",
            "line": 189,
            "description": "Setter del Decay",
            "itemtype": "method",
            "name": "setDecay",
            "params": [
                {
                    "name": "val",
                    "description": "Valor",
                    "type": "Float"
                }
            ],
            "class": "Voice",
            "module": "synth"
        },
        {
            "file": "src\\controller\\voice.js",
            "line": 198,
            "description": "Setter del tipo de onda para cada una de las voces",
            "itemtype": "method",
            "name": "setType",
            "params": [
                {
                    "name": "type",
                    "description": "Tipo de onda",
                    "type": "String"
                }
            ],
            "class": "Voice",
            "module": "synth"
        },
        {
            "file": "src\\controller\\voice.js",
            "line": 210,
            "description": "Método que simula el comportamiento de una envolvente sobre una \nseñal de audio y que es llamado cada vez que se presiona una nota",
            "itemtype": "method",
            "name": "envelopeGeneratorOn",
            "params": [
                {
                    "name": "key",
                    "description": "Nota presionada",
                    "type": "String"
                },
                {
                    "name": "gain",
                    "description": "Volumen actual del oscilador",
                    "type": "Float"
                }
            ],
            "class": "Voice",
            "module": "synth"
        },
        {
            "file": "src\\view\\elements\\envelope.js",
            "line": 17,
            "description": "Id del oscilador que posee la envolvente",
            "itemtype": "property",
            "name": "#osc",
            "type": "Char",
            "access": "private",
            "tagname": "",
            "class": "Envelope",
            "module": "synth"
        },
        {
            "file": "src\\view\\elements\\envelope.js",
            "line": 33,
            "description": "Método que devuelve el componente Envelope para ser renderizado",
            "itemtype": "method",
            "name": "render",
            "return": {
                "description": "Código html del componente Envelope"
            },
            "class": "Envelope",
            "module": "synth"
        },
        {
            "file": "src\\view\\elements\\limitedKnob.js",
            "line": 20,
            "description": "Tipo de knob",
            "itemtype": "property",
            "name": "type",
            "type": "Object",
            "access": "private",
            "tagname": "",
            "class": "LimitedKnob",
            "module": "types"
        },
        {
            "file": "src\\view\\elements\\limitedKnob.js",
            "line": 27,
            "description": "Tipo de skin del knob",
            "itemtype": "property",
            "name": "skin",
            "type": "Object",
            "access": "private",
            "tagname": "",
            "class": "LimitedKnob",
            "module": "types"
        },
        {
            "file": "src\\view\\elements\\limitedKnob.js",
            "line": 34,
            "description": "Valor actual del knob",
            "itemtype": "property",
            "name": "value",
            "type": "Float",
            "access": "private",
            "tagname": "",
            "class": "LimitedKnob",
            "module": "types"
        },
        {
            "file": "src\\view\\elements\\limitedKnob.js",
            "line": 41,
            "description": "Estado del Knob",
            "itemtype": "property",
            "name": "state",
            "type": "Object",
            "class": "LimitedKnob",
            "module": "types"
        },
        {
            "file": "src\\view\\elements\\limitedKnob.js",
            "line": 49,
            "description": "Id del oscilador que contiene el Knob",
            "itemtype": "property",
            "name": "osc",
            "type": "char",
            "class": "LimitedKnob",
            "module": "types"
        },
        {
            "file": "src\\view\\elements\\limitedKnob.js",
            "line": 85,
            "description": "Método que se encarga de llamar al controlador para que \nmodifque el volumen general del oscilador",
            "itemtype": "method",
            "name": "handleOnChangeOscillator",
            "params": [
                {
                    "name": "val",
                    "description": "Valor del Knob",
                    "type": "Float"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "LimitedKnob",
            "module": "types"
        },
        {
            "file": "src\\view\\elements\\limitedKnob.js",
            "line": 100,
            "description": "Método que se encarga de llamar al controlador para que \nmodifque el Attack del oscilador",
            "itemtype": "method",
            "name": "handleOnChangeAttack",
            "params": [
                {
                    "name": "val",
                    "description": "Valor del Knob",
                    "type": "Float"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "LimitedKnob",
            "module": "types"
        },
        {
            "file": "src\\view\\elements\\limitedKnob.js",
            "line": 115,
            "description": "Método que se encarga de llamar al controlador para que \nmodifque el Decay del oscilador",
            "itemtype": "method",
            "name": "handleOnChangeDecay",
            "params": [
                {
                    "name": "val",
                    "description": "Valor del Knob",
                    "type": "Float"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "LimitedKnob",
            "module": "types"
        },
        {
            "file": "src\\view\\elements\\limitedKnob.js",
            "line": 129,
            "description": "Método que se encarga de llamar al controlador para que \nmodifque el Sustain del oscilador",
            "itemtype": "method",
            "name": "handleOnChangeSustain",
            "params": [
                {
                    "name": "val",
                    "description": "Valor del Knob",
                    "type": "Float"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "LimitedKnob",
            "module": "types"
        },
        {
            "file": "src\\view\\elements\\limitedKnob.js",
            "line": 142,
            "description": "Método que se encarga de llamar al controlador para que \nmodifque el Release del oscilador",
            "itemtype": "method",
            "name": "handleOnChangeRelease",
            "params": [
                {
                    "name": "val",
                    "description": "Valor del Knob",
                    "type": "Float"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "LimitedKnob",
            "module": "types"
        },
        {
            "file": "src\\view\\elements\\limitedKnob.js",
            "line": 158,
            "description": "Método que es llamado cada vez que un Knob es alterado y que redirige la llamada\nal método adecuado para modificar el parámetro que esta modificando el usuario al \nmover el Knob",
            "itemtype": "method",
            "name": "handleOnChange",
            "params": [
                {
                    "name": "val",
                    "description": "Valor del Knob",
                    "type": "Float"
                }
            ],
            "class": "LimitedKnob",
            "module": "types"
        },
        {
            "file": "src\\view\\elements\\limitedKnob.js",
            "line": 202,
            "description": "Getter del estado del Knob",
            "itemtype": "method",
            "name": "getState",
            "return": {
                "description": "Estado del Knob"
            },
            "class": "LimitedKnob",
            "module": "types"
        },
        {
            "file": "src\\view\\elements\\limitedKnob.js",
            "line": 214,
            "description": "Método que devuelve el componente Knob para ser renderizado",
            "itemtype": "method",
            "name": "render",
            "return": {
                "description": "Código html del componente Knob"
            },
            "class": "LimitedKnob",
            "module": "types"
        },
        {
            "file": "src\\view\\navbar.js",
            "line": 21,
            "description": "Método que obtiene el link activo",
            "itemtype": "method",
            "name": "getNavLinkClass",
            "params": [
                {
                    "name": "path",
                    "description": "link",
                    "type": "String"
                }
            ],
            "class": "Navigator",
            "module": "Navigator"
        },
        {
            "file": "src\\view\\navbar.js",
            "line": 30,
            "description": "Método que construlle el componente de la interfaz relativo a el navegador.",
            "itemtype": "method",
            "name": "render",
            "return": {
                "description": "Código html del componente navegador"
            },
            "class": "Navigator",
            "module": "Navigator"
        },
        {
            "file": "src\\view\\osc-components.js",
            "line": 22,
            "description": "Identificador del oscilador",
            "itemtype": "property",
            "name": "#osc",
            "type": "Char",
            "access": "private",
            "tagname": "",
            "class": "Oscilador",
            "module": "Navigator"
        },
        {
            "file": "src\\view\\osc-components.js",
            "line": 30,
            "description": "Referencia a la clase Knob",
            "itemtype": "property",
            "name": "_KnobVol",
            "type": "Ref",
            "class": "Oscilador",
            "module": "Navigator"
        },
        {
            "file": "src\\view\\osc-components.js",
            "line": 53,
            "description": "Método que se encarga de comprobar si esta encendido o apagado \nel oscilador",
            "itemtype": "method",
            "name": "checkChecked",
            "class": "Oscilador",
            "module": "Navigator"
        },
        {
            "file": "src\\view\\osc-components.js",
            "line": 77,
            "description": "Método que se encarga de comprobar que onda esta seleccionada en el \nmomento de la llamada",
            "itemtype": "method",
            "name": "checkWave",
            "class": "Oscilador",
            "module": "Navigator"
        },
        {
            "file": "src\\view\\osc-components.js",
            "line": 110,
            "description": "Método que construlle el componente de la interfaz relativo a el oscilador, que contiene los Knobs de la envolvente,\nel selector de onda, el knob de volumen y el botón de encendido y apagado.",
            "itemtype": "method",
            "name": "render",
            "return": {
                "description": "Código html del componente oscilador"
            },
            "class": "Oscilador",
            "module": "Navigator"
        },
        {
            "file": "src\\view\\piano-component.js",
            "line": 17,
            "description": "Octava en la que se encuentra el piano",
            "itemtype": "property",
            "name": "#octave",
            "type": "String",
            "access": "private",
            "tagname": "",
            "class": "Piano",
            "module": "OscComponents"
        },
        {
            "file": "src\\view\\piano-component.js",
            "line": 25,
            "description": "Lista de las teclas presionadas por el usuario",
            "itemtype": "property",
            "name": "pressedKeys",
            "type": "JSON",
            "class": "Piano",
            "module": "OscComponents"
        },
        {
            "file": "src\\view\\piano-component.js",
            "line": 33,
            "description": "Lista con las notas y sus frecuencias",
            "itemtype": "property",
            "name": "notes",
            "type": "JSON",
            "class": "Piano",
            "module": "OscComponents"
        },
        {
            "file": "src\\view\\piano-component.js",
            "line": 52,
            "description": "Método que se encarga de identificar que nota ha sido accionada por el usuario\ny una vez identificada, mandarla al controlador para que se reproduzca.",
            "itemtype": "method",
            "name": "playNote",
            "params": [
                {
                    "name": "oct",
                    "description": "Inidica si la nota es de la octava de arriba o de abajo del piano",
                    "type": "String"
                },
                {
                    "name": "key",
                    "description": "Nota presionada",
                    "type": "String"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Piano",
            "module": "OscComponents"
        },
        {
            "file": "src\\view\\piano-component.js",
            "line": 91,
            "description": "Método que realiza una petición a la base de datos para obtener un listado\nde las notas con sus frecuencias. Este listado lo almacena en una variable de clase",
            "itemtype": "method",
            "name": "fetchNotes",
            "class": "Piano",
            "module": "OscComponents"
        },
        {
            "file": "src\\view\\piano-component.js",
            "line": 108,
            "description": "Este método cambia el número de la octava que aparece junto a cada nota\nen el piano.",
            "itemtype": "method",
            "name": "changeHtmlNotes",
            "class": "Piano",
            "module": "OscComponents"
        },
        {
            "file": "src\\view\\piano-component.js",
            "line": 149,
            "description": "Cuando el usuario pulsa en el botón de subir octava, se llama a este método\npara que actualice la octava de las notas.",
            "itemtype": "method",
            "name": "upOctave",
            "class": "Piano",
            "module": "OscComponents"
        },
        {
            "file": "src\\view\\piano-component.js",
            "line": 165,
            "description": "Cuando el usuario pulsa en el botón de bajar octava, se llama a este método\npara que actualice la octava de las notas.",
            "itemtype": "method",
            "name": "downOctave",
            "class": "Piano",
            "module": "OscComponents"
        },
        {
            "file": "src\\view\\piano-component.js",
            "line": 180,
            "description": "Método que recibe como argumento el evento que se produce cuando el usuario clica en una\nnota del piano y que se encarga de identificar esta nota e indicarsela al método que se encarga de \nenviarsela al controlador",
            "itemtype": "method",
            "name": "notePlayed",
            "params": [
                {
                    "name": "e",
                    "description": "Evento que se corresponde con el click en una nota",
                    "type": "Event"
                }
            ],
            "class": "Piano",
            "module": "OscComponents"
        },
        {
            "file": "src\\view\\piano-component.js",
            "line": 214,
            "description": "Método que se llama cuando el usuario presiona una de tecla del teclado asiganada a una\nnota del piano y que se encarga de identificar esta nota para simular que se clica en ella \ne indicarsela al método que se encarga de enviarsela al controlador",
            "itemtype": "method",
            "name": "notePlayed",
            "params": [
                {
                    "name": "type",
                    "description": "Tipo de la not, si es negra o blanca",
                    "type": "String"
                },
                {
                    "name": "note",
                    "description": "Nota presionada",
                    "type": "String"
                },
                {
                    "name": "keyname",
                    "description": "Tecla presionada",
                    "type": "Char"
                },
                {
                    "name": "octave",
                    "description": "Octava del piano de la nota presionada",
                    "type": "String"
                }
            ],
            "class": "Piano",
            "module": "OscComponents"
        },
        {
            "file": "src\\view\\piano-component.js",
            "line": 244,
            "description": "Método que devuelve el código necesario para renderizar el componente",
            "itemtype": "method",
            "name": "render",
            "return": {
                "description": "Código html del componente piano y escuchadores de eventos"
            },
            "class": "Piano",
            "module": "OscComponents"
        },
        {
            "file": "src\\view\\piano-component.js",
            "line": 288,
            "description": "Se acciona cada vez que se pulsa una tecla del teclado",
            "itemtype": "event",
            "name": "keydown",
            "class": "Piano",
            "module": "OscComponents"
        },
        {
            "file": "src\\view\\piano-component.js",
            "line": 404,
            "description": "Se acciona cuando se levanta una tecla del teclado presionada",
            "itemtype": "event",
            "name": "keyup",
            "class": "Piano",
            "module": "OscComponents"
        }
    ],
    "warnings": [
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\view\\navbar.js:30"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\view\\osc-components.js:110"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\view\\piano-component.js:244"
        }
    ]
}